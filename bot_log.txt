DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000001C98C4110A0>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'wFU+FbVz4ZHxFvNVznQfbQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 05:55:08 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'Ic+4s/gnGsaYTcwFaGFO5UC8WDo=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<473 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:websockets.protocol:client - event = data_received(<469 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<162 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<135 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':letsdothis_music!letsdothis_music@letsdothis_music.tmi.twitch.tv JOIN #daroboto\r\n:lurxx!lurxx@lurxx.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'bM\xa3\x91', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'bM\xa3\x91', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 624da391
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'=h)*', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'=h)*', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 3d68292a
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000001B1AC4C20A0>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', '5ZkwjGZjmuxzkBKktexVLQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 05:56:01 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'jqZNhUQUILH3R7uH9IkvZwEj+FY=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<473 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<469 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001B1AB947CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001B1AB94E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2Fbot%2Ffrank', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001B1ABA1D700>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001B1ABA1D520>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001B1AB947B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252Fbot%252Ffrank
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T055603Z

host;x-amz-date
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T055603Z
20201115/ap-southeast-2/iotdata/aws4_request
ca07371cb5bd6c2bd1e5f72379c8ed581b99ca7687c5db92a7a37b9f8f10d680
DEBUG:botocore.auth:Signature:
7d8eb30dd60bd46d66897bb857b1e788f5795499b9c0adb907027cfce035fa0d
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T055603Z', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA5DSSEYVDFH3ZV23W/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date, Signature=7d8eb30dd60bd46d66897bb857b1e788f5795499b9c0adb907027cfce035fa0d', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2Fbot%2Ffrank?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 05:56:03 GMT', 'x-amzn-RequestId': '288c2316-9b10-8cc5-d733-324900fc0ef3', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"288c2316-9b10-8cc5-d733-324900fc0ef3"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001B1AC48A0D0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<162 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000002A0902420A0>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'NCWWnmAZNKFK2Qq9/H6EBw=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 05:56:09 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', '866hKLkkyyXRoJgHoEGzNag2APg=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<473 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:websockets.protocol:client - event = data_received(<60 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<415 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000002A08F6C7CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000002A08F6CD550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2Fbot%2Ffrank', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000002A08F79D670>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000002A08F79D490>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000002A08F6C7B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252Fbot%252Ffrank
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T055610Z

host;x-amz-date
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T055610Z
20201115/ap-southeast-2/iotdata/aws4_request
dccd09e72882ed9775c52240e82f486b5becb9e2fe1529344aecf046c4561edf
DEBUG:botocore.auth:Signature:
575647e6879d7ab4ca156b71cdbfa6b5c0ecc02ce62a6790547ada7eefc98fb5
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T055610Z', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA5DSSEYVDFH3ZV23W/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date, Signature=575647e6879d7ab4ca156b71cdbfa6b5c0ecc02ce62a6790547ada7eefc98fb5', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2Fbot%2Ffrank?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 05:56:10 GMT', 'x-amzn-RequestId': '065c7c73-0780-3361-9a3e-14ef90d8c695', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"065c7c73-0780-3361-9a3e-14ef90d8c695"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000002A09020B040>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<162 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'E_M:', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'E_M:', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 455f4d3a
DEBUG:websockets.protocol:client - event = data_received(<135 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':letsdothis_music!letsdothis_music@letsdothis_music.tmi.twitch.tv JOIN #daroboto\r\n:lurxx!lurxx@lurxx.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\x0cCa4', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\x0cCa4', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 0c436134
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\xe4\xa9T\x91', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\xe4\xa9T\x91', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: e4a95491
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x00000213CD4B20A0>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'WNVbqOothoXXOTxm8Xwc+g=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 05:57:14 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'Tnch+KBt9ah+SUHbSvrQUnS381E=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<425 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<50 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<469 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x00000213CC937CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x00000213CC93E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2Fbot%2Ffrank', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x00000213CCA0B760>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x00000213CCA0B580>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x00000213CC937B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252Fbot%252Ffrank
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T055715Z

host;x-amz-date
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T055715Z
20201115/ap-southeast-2/iotdata/aws4_request
8622d5aa4f856aaebc9db0525ce0444892eee23c0661bd606ec44f6d46f4649d
DEBUG:botocore.auth:Signature:
6e67f44b0eec44d017b800f6bca63ac14d6d64fd28c251975f4b2b22d23d18e1
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T055715Z', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA5DSSEYVDFH3ZV23W/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date, Signature=6e67f44b0eec44d017b800f6bca63ac14d6d64fd28c251975f4b2b22d23d18e1', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2Fbot%2Ffrank?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 05:57:15 GMT', 'x-amzn-RequestId': 'aff942aa-7286-e4bb-11cc-8ca3a4ef8a6e', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"aff942aa-7286-e4bb-11cc-8ca3a4ef8a6e"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x00000213CD47A130>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<162 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x0000018909C920A0>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'kGY5yufRd7f9zthPl0vhjg=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 05:58:07 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'k+a3QLIm64iFoR3yYr3vmVdYBII=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<425 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<50 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<190 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<283 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x0000018909118CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001890911D550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2Fbot%2Ffrank', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x00000189091ED5E0>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x00000189091ED400>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x0000018909118B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252Fbot%252Ffrank
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T055809Z

host;x-amz-date
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T055809Z
20201115/ap-southeast-2/iotdata/aws4_request
77edfd2599d52af1f2217f91b191c3f330842ebf94c41026bc390249b6a740d2
DEBUG:botocore.auth:Signature:
017901a95372171df0d2e76cdc28e625dc7b372b773b89f969f02efb8ccd83e0
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T055809Z', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA5DSSEYVDFH3ZV23W/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date, Signature=017901a95372171df0d2e76cdc28e625dc7b372b773b89f969f02efb8ccd83e0', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2Fbot%2Ffrank?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 05:58:08 GMT', 'x-amzn-RequestId': 'dcd2748c-bb64-3444-5ede-b8b7345151c7', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"dcd2748c-bb64-3444-5ede-b8b7345151c7"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x00000189091EDF70>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<162 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x0000028E3F780160>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'trmtCygbBxRJL5YDy5rIHw=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 05:59:49 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'PEAE6AyBD7ONutJ05gRhy2+z9hQ=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<425 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<50 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<469 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x0000028E3EBF8CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x0000028E3EBFE550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2Fbot%2Ffrank', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x0000028E3ECE9D60>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x0000028E3ECE9B80>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x0000028E3EBF8B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252Fbot%252Ffrank
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T055950Z

host;x-amz-date
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T055950Z
20201115/ap-southeast-2/iotdata/aws4_request
20274a1d9193944ae685c32f17f26ac256bc3d1d12c6ffe44f31df8f64e75eee
DEBUG:botocore.auth:Signature:
42bb938d9d1705fba307f08fe89b1c9d080d3e1ffd54de904eb13c08a6b790c6
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T055950Z', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA5DSSEYVDFH3ZV23W/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date, Signature=42bb938d9d1705fba307f08fe89b1c9d080d3e1ffd54de904eb13c08a6b790c6', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2Fbot%2Ffrank?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 05:59:50 GMT', 'x-amzn-RequestId': '9de12eaa-24cb-ce98-eb40-ebd47915ece0', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"9de12eaa-24cb-ce98-eb40-ebd47915ece0"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x0000028E3F74A460>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<162 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000001BEAB3C0160>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'v9ybSDwr9MNUocoZBrENMQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 06:00:08 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'A7psDzQDEqMpf/ScqToeS4hyrYQ=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<425 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<50 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<469 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,15940,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001BEAA838CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001BEAA83E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2Fbot%2Ffrank%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001BEAA929D60>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001BEAA929B80>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001BEAA838B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252Fbot%252Ffrank%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060009Z

host;x-amz-date
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060009Z
20201115/ap-southeast-2/iotdata/aws4_request
f0b3012da74364d347db1427a5ff9e62378ad4f9d730a6a47498da7f46603422
DEBUG:botocore.auth:Signature:
75e44145a6cc79033cfa754095dac69f26a74d1ba2631fdbc1b28ac970649e9e
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060009Z', 'Authorization': b'AWS4-HMAC-SHA256 Credential=AKIA5DSSEYVDFH3ZV23W/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date, Signature=75e44145a6cc79033cfa754095dac69f26a74d1ba2631fdbc1b28ac970649e9e', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2Fbot%2Ffrank%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:00:09 GMT', 'x-amzn-RequestId': '254926d4-f824-4f10-f2c9-9669a68f360d', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"254926d4-f824-4f10-f2c9-9669a68f360d"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001BEAB38A460>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b"p\x0f'G", rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b"p\x0f'G", rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 700f2747
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'g\xb3\xfc:', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'g\xb3\xfc:', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 67b3fc3a
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000001D1776DF160>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'YGsyR23LBNaw3kiNHJsW8A=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 06:00:59 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'Bz9iULsbm7or5M+xc3XK3Bg1g9w=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<473 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:websockets.protocol:client - event = data_received(<463 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001D176B58CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001D176B5E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2Fbot%2Ffrank%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001D176C49E20>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001D176C49C40>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001D176B58B80>
DEBUG:botocore.hooks:Event choose-service-name: calling handler <function handle_service_name_alias at 0x000001D176B3F5E0>
DEBUG:botocore.loaders:Loading JSON file: C:\Users\Andrew\.virtualenvs\chatbot-5QJP191A\lib\site-packages\botocore\data\sso\2019-06-10\service-2.json
DEBUG:botocore.hooks:Event creating-client-class.sso: calling handler <function add_generate_presigned_url at 0x000001D176AEECA0>
DEBUG:botocore.endpoint:Setting portal.sso timeout as (60, 60)
DEBUG:botocore.client:Registering retry handlers for service: sso
DEBUG:botocore.hooks:Event before-parameter-build.sso.GetRoleCredentials: calling handler <function generate_idempotent_uuid at 0x000001D176B58CA0>
DEBUG:botocore.hooks:Event before-call.sso.GetRoleCredentials: calling handler <function inject_api_version_header_if_needed at 0x000001D176B5E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=GetRoleCredentials) with params: {'url_path': '/federation/credentials', 'query_string': {'role_name': 'AWSAdministratorAccess', 'account_id': '883876707637'}, 'method': 'GET', 'headers': {'x-amz-sso_bearer_token': 'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'', 'url': 'https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001D1776E1EE0>, 'has_streaming_input': False, 'auth_type': 'none'}}
DEBUG:botocore.hooks:Event request-created.sso.GetRoleCredentials: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001D1776E1E50>>
DEBUG:botocore.hooks:Event choose-signer.sso.GetRoleCredentials: calling handler <function set_operation_specific_signer at 0x000001D176B58B80>
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637, headers={'x-amz-sso_bearer_token': b'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): portal.sso.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://portal.sso.ap-southeast-2.amazonaws.com:443 "GET /federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637 HTTP/1.1" 200 1100
DEBUG:botocore.parsers:Response headers: {'Date': 'Sun, 15 Nov 2020 06:01:00 GMT', 'Content-Type': 'application/json', 'Content-Length': '1100', 'Connection': 'keep-alive', 'Access-Control-Expose-Headers': 'RequestId', 'Cache-Control': 'no-cache', 'RequestId': 'a177cbf8-7d93-4815-aa8c-2372d632b8eb', 'Server': 'AWS SSO'}
DEBUG:botocore.parsers:Response body:
b'{"roleCredentials":{"accessKeyId":"ASIA43SZIHU2TS7VYGXU","secretAccessKey":"ySfhKx7seSdSfhTAzRu6JBS2DGa9/Dp62ANGDqD6","sessionToken":"IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhALZWM/TipDE0z47TtxNqtnDhx21i5K6Jj7XLEVFGngEbAiEA8tEGKNtrjdKuAtjPRccZfUgrxrsj4ZnkIhcEuvKxcqQqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDMTIxBRyMR/CKozfzyr4Arz9uaomIgs2z8uW3pc339+znusXjFqoNUHpyQfo6U0HHxQ0Lhh0bHn0qVzFVxhx6J0hvLscpxqhoLL37Zc7w2LeJvr7fq8p6QWUurvWLl/Ur5reAFL6DnyONAffaSjHY2M07pc439RilJZtAxUp2eOvhly1UL9pYAnEOBrhb47xytAsKcCK76tqEE8LdIqOof9O12+ktLLMC7TicfK6ZvUE6nHDEdWOzPsu18/UVQ2YXRMNCUHBbB+VPQ9bdWp9XxVuCKhJAzegcszfbhS5H11NX5sBge594HXQjN7b+JQLhoIu1iCXZvzTkxteTz711DJkXId4rWzh91YK91Ubg5JyVtIX4sJfiCf641JilYjZ8gN5aR3dXfV/LF1VGYl+pGRZ53RAb2rUlnqcc+7VVCdPiQRYoeWYbLMoBm7kxThKewIX49/JwGiEEclG2gL/P4AA7fQ/4of1oisSutYNcNJEvhqbC2rQknLTbG4t6APLdJKgrRgmQ5EwnIjD/QU6pQFvm2VtDg0n58UQkD4hstZy+j228h9xsslleIMnBz4g1l33gUaMTz+LjutjxrujE/Tx1tFVUYxtfUQLg7YaQhuqO9Bwwx2XUvitwIEJtM68HmnjZIV1Ygv+2H20FveH4k3ZGI1qpxhZ7arpoNZtlZQMYLSZXymJZRBeuc9oeZ3iJWdkrSoG9ySQ4FJ8WHqnzp6mtOaRAT+5PNFgJSNJU3Uiw0g7ZzQ=","expiration":1605423659000}}'
DEBUG:botocore.hooks:Event needs-retry.sso.GetRoleCredentials: calling handler <botocore.retryhandler.RetryHandler object at 0x000001D1777478B0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:botocore.credentials:Retrieved credentials will expire at: 2020-11-15 07:00:59+00:00
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252Fbot%252Ffrank%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060101Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhALZWM/TipDE0z47TtxNqtnDhx21i5K6Jj7XLEVFGngEbAiEA8tEGKNtrjdKuAtjPRccZfUgrxrsj4ZnkIhcEuvKxcqQqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDMTIxBRyMR/CKozfzyr4Arz9uaomIgs2z8uW3pc339+znusXjFqoNUHpyQfo6U0HHxQ0Lhh0bHn0qVzFVxhx6J0hvLscpxqhoLL37Zc7w2LeJvr7fq8p6QWUurvWLl/Ur5reAFL6DnyONAffaSjHY2M07pc439RilJZtAxUp2eOvhly1UL9pYAnEOBrhb47xytAsKcCK76tqEE8LdIqOof9O12+ktLLMC7TicfK6ZvUE6nHDEdWOzPsu18/UVQ2YXRMNCUHBbB+VPQ9bdWp9XxVuCKhJAzegcszfbhS5H11NX5sBge594HXQjN7b+JQLhoIu1iCXZvzTkxteTz711DJkXId4rWzh91YK91Ubg5JyVtIX4sJfiCf641JilYjZ8gN5aR3dXfV/LF1VGYl+pGRZ53RAb2rUlnqcc+7VVCdPiQRYoeWYbLMoBm7kxThKewIX49/JwGiEEclG2gL/P4AA7fQ/4of1oisSutYNcNJEvhqbC2rQknLTbG4t6APLdJKgrRgmQ5EwnIjD/QU6pQFvm2VtDg0n58UQkD4hstZy+j228h9xsslleIMnBz4g1l33gUaMTz+LjutjxrujE/Tx1tFVUYxtfUQLg7YaQhuqO9Bwwx2XUvitwIEJtM68HmnjZIV1Ygv+2H20FveH4k3ZGI1qpxhZ7arpoNZtlZQMYLSZXymJZRBeuc9oeZ3iJWdkrSoG9ySQ4FJ8WHqnzp6mtOaRAT+5PNFgJSNJU3Uiw0g7ZzQ=

host;x-amz-date;x-amz-security-token
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060101Z
20201115/ap-southeast-2/iotdata/aws4_request
a024ccddad3e918f8a4604ef790b2122f7ce62b2bb802b87a24913aca9b8eaa4
DEBUG:botocore.auth:Signature:
5c91bd2640eeecf044292e2d19ea9ba7b1a78b57893b3a48eff21fb259f229ac
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2Fbot%2Ffrank%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060101Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhALZWM/TipDE0z47TtxNqtnDhx21i5K6Jj7XLEVFGngEbAiEA8tEGKNtrjdKuAtjPRccZfUgrxrsj4ZnkIhcEuvKxcqQqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDMTIxBRyMR/CKozfzyr4Arz9uaomIgs2z8uW3pc339+znusXjFqoNUHpyQfo6U0HHxQ0Lhh0bHn0qVzFVxhx6J0hvLscpxqhoLL37Zc7w2LeJvr7fq8p6QWUurvWLl/Ur5reAFL6DnyONAffaSjHY2M07pc439RilJZtAxUp2eOvhly1UL9pYAnEOBrhb47xytAsKcCK76tqEE8LdIqOof9O12+ktLLMC7TicfK6ZvUE6nHDEdWOzPsu18/UVQ2YXRMNCUHBbB+VPQ9bdWp9XxVuCKhJAzegcszfbhS5H11NX5sBge594HXQjN7b+JQLhoIu1iCXZvzTkxteTz711DJkXId4rWzh91YK91Ubg5JyVtIX4sJfiCf641JilYjZ8gN5aR3dXfV/LF1VGYl+pGRZ53RAb2rUlnqcc+7VVCdPiQRYoeWYbLMoBm7kxThKewIX49/JwGiEEclG2gL/P4AA7fQ/4of1oisSutYNcNJEvhqbC2rQknLTbG4t6APLdJKgrRgmQ5EwnIjD/QU6pQFvm2VtDg0n58UQkD4hstZy+j228h9xsslleIMnBz4g1l33gUaMTz+LjutjxrujE/Tx1tFVUYxtfUQLg7YaQhuqO9Bwwx2XUvitwIEJtM68HmnjZIV1Ygv+2H20FveH4k3ZGI1qpxhZ7arpoNZtlZQMYLSZXymJZRBeuc9oeZ3iJWdkrSoG9ySQ4FJ8WHqnzp6mtOaRAT+5PNFgJSNJU3Uiw0g7ZzQ=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU2TS7VYGXU/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=5c91bd2640eeecf044292e2d19ea9ba7b1a78b57893b3a48eff21fb259f229ac', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2Fbot%2Ffrank%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:01:01 GMT', 'x-amzn-RequestId': '18bd5f1b-7ea5-ee2d-057c-b2595ebd37c4', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"18bd5f1b-7ea5-ee2d-057c-b2595ebd37c4"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001D1776AA520>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\x1bP\xe8\xe9', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\x1bP\xe8\xe9', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 1b50e8e9
DEBUG:websockets.protocol:client - event = data_received(<135 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':letsdothis_music!letsdothis_music@letsdothis_music.tmi.twitch.tv JOIN #daroboto\r\n:lurxx!lurxx@lurxx.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'K\xa6\x8a\xeb', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'K\xa6\x8a\xeb', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 4ba68aeb
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'k{\x02\xcc', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'k{\x02\xcc', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 6b7b02cc
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\x13\xddt:', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\x13\xddt:', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 13dd743a
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\xe2\x02\xdd\xfd', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\xe2\x02\xdd\xfd', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: e202ddfd
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\x8eWg\x8a', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\x8eWg\x8a', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 8e57678a
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\xbf7\x19=', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\xbf7\x19=', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: bf37193d
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000001BE91FCF160>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'SCKxynQlOjZsqSMnDJ+M+A=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 06:03:28 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'gzF/abQziGK+Jfi8iW2Fo9gB26A=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<473 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:websockets.protocol:client - event = data_received(<60 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001BE91448CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001BE9144E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001BE9153BD00>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001BE9153BB20>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001BE91448B80>
DEBUG:botocore.hooks:Event choose-service-name: calling handler <function handle_service_name_alias at 0x000001BE9142E5E0>
DEBUG:botocore.loaders:Loading JSON file: C:\Users\Andrew\.virtualenvs\chatbot-5QJP191A\lib\site-packages\botocore\data\sso\2019-06-10\service-2.json
DEBUG:botocore.hooks:Event creating-client-class.sso: calling handler <function add_generate_presigned_url at 0x000001BE913DECA0>
DEBUG:botocore.endpoint:Setting portal.sso timeout as (60, 60)
DEBUG:botocore.client:Registering retry handlers for service: sso
DEBUG:botocore.hooks:Event before-parameter-build.sso.GetRoleCredentials: calling handler <function generate_idempotent_uuid at 0x000001BE91448CA0>
DEBUG:botocore.hooks:Event before-call.sso.GetRoleCredentials: calling handler <function inject_api_version_header_if_needed at 0x000001BE9144E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=GetRoleCredentials) with params: {'url_path': '/federation/credentials', 'query_string': {'role_name': 'AWSAdministratorAccess', 'account_id': '883876707637'}, 'method': 'GET', 'headers': {'x-amz-sso_bearer_token': 'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'', 'url': 'https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001BE91FD0EE0>, 'has_streaming_input': False, 'auth_type': 'none'}}
DEBUG:botocore.hooks:Event request-created.sso.GetRoleCredentials: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001BE91FD0E50>>
DEBUG:botocore.hooks:Event choose-signer.sso.GetRoleCredentials: calling handler <function set_operation_specific_signer at 0x000001BE91448B80>
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637, headers={'x-amz-sso_bearer_token': b'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): portal.sso.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://portal.sso.ap-southeast-2.amazonaws.com:443 "GET /federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637 HTTP/1.1" 200 1100
DEBUG:botocore.parsers:Response headers: {'Date': 'Sun, 15 Nov 2020 06:03:30 GMT', 'Content-Type': 'application/json', 'Content-Length': '1100', 'Connection': 'keep-alive', 'Access-Control-Expose-Headers': 'RequestId', 'Cache-Control': 'no-cache', 'RequestId': '661e8e51-308f-4145-b35d-08e4110a2144', 'Server': 'AWS SSO'}
DEBUG:botocore.parsers:Response body:
b'{"roleCredentials":{"accessKeyId":"ASIA43SZIHU25L54AP73","secretAccessKey":"a3e4JUZTWdobmHF4wLEjcLJ28+LDdCXawdiJPEYc","sessionToken":"IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAMzmw15fLFBs9e2g09znc0sZKPrtFCLs2UBZjXF0cJ9LAiEAwtNxJjcAKtJ45yTuJCHvURATGNJ6QZfPnX/U52ycCuoqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDAYttjyU8nBH4qacWir4AkR1xGDiiUg/yC//9Gi7Mcmenj5B2hG1JDnHt8CoiuPjcsTjFZr52PqiilKlK8qjkQRoUZb4b1kNPs7b5jN2ULolD5s+ATsXmVXfl35oPw0DR2IEPu4WSIOdqBm69Y3pzWFn916tGUspWYmzfX4aUYfkKi6AZSt8QXxWpISo2lHR1GfVhl4wjg7gx3kmFdsgsCEW+zYLcInyHYiPQ71UPpDDg9MvohLFK6afwx4m+l+XozJwh0kIZxLJrFFuj4gNLvqZ2oP++CaSdThn78wQotH2/j2r4ZDBYeURpqNg3+QUVIF1X99Oe2o6li2oj4O6lNrP0mc5YWHy4Ynm353+6KhUk9aI1ifsrNPbt2Ie7+Zj2doYoOSvhr+fAOhmBFpJRKXDH4UHl1Vc2LBYDSbp/Wl8tso7G2jcFwhwyyAalqLuHkk/XpSTU6EnujT3tp4qLMjonDr7x8OvMW1mSzxmArZUdNsd1UA/euVVarCo3XU6dhn2TqXqwPIwsYnD/QU6pQFj7zSyTgxGIwU7rHqdgwYYt72buoRBG/1i+OGE9eF+MnzlKSXd7cmSkJPwarG8OibzTpIq+hkaT2EYvcgRx/GPRwuRJIDkpjQwIBOkVW5zzrtYhvwjGZBgfdHrnewyMl/B1K5i1s1vcT+zTgNpHhqmS994MAj8lSOGo4QnV+uGOLVQ6tGQz6MWXOYs1wyeoySPyl8bINlf+//zkRvyY5+veUlC9Vg=","expiration":1605423808000}}'
DEBUG:botocore.hooks:Event needs-retry.sso.GetRoleCredentials: calling handler <botocore.retryhandler.RetryHandler object at 0x000001BE920378B0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:botocore.credentials:Retrieved credentials will expire at: 2020-11-15 07:03:28+00:00
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060330Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAMzmw15fLFBs9e2g09znc0sZKPrtFCLs2UBZjXF0cJ9LAiEAwtNxJjcAKtJ45yTuJCHvURATGNJ6QZfPnX/U52ycCuoqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDAYttjyU8nBH4qacWir4AkR1xGDiiUg/yC//9Gi7Mcmenj5B2hG1JDnHt8CoiuPjcsTjFZr52PqiilKlK8qjkQRoUZb4b1kNPs7b5jN2ULolD5s+ATsXmVXfl35oPw0DR2IEPu4WSIOdqBm69Y3pzWFn916tGUspWYmzfX4aUYfkKi6AZSt8QXxWpISo2lHR1GfVhl4wjg7gx3kmFdsgsCEW+zYLcInyHYiPQ71UPpDDg9MvohLFK6afwx4m+l+XozJwh0kIZxLJrFFuj4gNLvqZ2oP++CaSdThn78wQotH2/j2r4ZDBYeURpqNg3+QUVIF1X99Oe2o6li2oj4O6lNrP0mc5YWHy4Ynm353+6KhUk9aI1ifsrNPbt2Ie7+Zj2doYoOSvhr+fAOhmBFpJRKXDH4UHl1Vc2LBYDSbp/Wl8tso7G2jcFwhwyyAalqLuHkk/XpSTU6EnujT3tp4qLMjonDr7x8OvMW1mSzxmArZUdNsd1UA/euVVarCo3XU6dhn2TqXqwPIwsYnD/QU6pQFj7zSyTgxGIwU7rHqdgwYYt72buoRBG/1i+OGE9eF+MnzlKSXd7cmSkJPwarG8OibzTpIq+hkaT2EYvcgRx/GPRwuRJIDkpjQwIBOkVW5zzrtYhvwjGZBgfdHrnewyMl/B1K5i1s1vcT+zTgNpHhqmS994MAj8lSOGo4QnV+uGOLVQ6tGQz6MWXOYs1wyeoySPyl8bINlf+//zkRvyY5+veUlC9Vg=

host;x-amz-date;x-amz-security-token
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060330Z
20201115/ap-southeast-2/iotdata/aws4_request
17ff1493f6add3f66bca20390bf5e804fd40b3f605cb86169c2da1fe14b36bce
DEBUG:botocore.auth:Signature:
56b984882f8b86c4fe17fb6adb0735afb29a80d8fe5ff472c91de5cceed00f4c
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060330Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAMzmw15fLFBs9e2g09znc0sZKPrtFCLs2UBZjXF0cJ9LAiEAwtNxJjcAKtJ45yTuJCHvURATGNJ6QZfPnX/U52ycCuoqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDAYttjyU8nBH4qacWir4AkR1xGDiiUg/yC//9Gi7Mcmenj5B2hG1JDnHt8CoiuPjcsTjFZr52PqiilKlK8qjkQRoUZb4b1kNPs7b5jN2ULolD5s+ATsXmVXfl35oPw0DR2IEPu4WSIOdqBm69Y3pzWFn916tGUspWYmzfX4aUYfkKi6AZSt8QXxWpISo2lHR1GfVhl4wjg7gx3kmFdsgsCEW+zYLcInyHYiPQ71UPpDDg9MvohLFK6afwx4m+l+XozJwh0kIZxLJrFFuj4gNLvqZ2oP++CaSdThn78wQotH2/j2r4ZDBYeURpqNg3+QUVIF1X99Oe2o6li2oj4O6lNrP0mc5YWHy4Ynm353+6KhUk9aI1ifsrNPbt2Ie7+Zj2doYoOSvhr+fAOhmBFpJRKXDH4UHl1Vc2LBYDSbp/Wl8tso7G2jcFwhwyyAalqLuHkk/XpSTU6EnujT3tp4qLMjonDr7x8OvMW1mSzxmArZUdNsd1UA/euVVarCo3XU6dhn2TqXqwPIwsYnD/QU6pQFj7zSyTgxGIwU7rHqdgwYYt72buoRBG/1i+OGE9eF+MnzlKSXd7cmSkJPwarG8OibzTpIq+hkaT2EYvcgRx/GPRwuRJIDkpjQwIBOkVW5zzrtYhvwjGZBgfdHrnewyMl/B1K5i1s1vcT+zTgNpHhqmS994MAj8lSOGo4QnV+uGOLVQ6tGQz6MWXOYs1wyeoySPyl8bINlf+//zkRvyY5+veUlC9Vg=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU25L54AP73/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=56b984882f8b86c4fe17fb6adb0735afb29a80d8fe5ff472c91de5cceed00f4c', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:03:30 GMT', 'x-amzn-RequestId': '536fb0ad-1b92-2c8b-c794-5ce832603ff4', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"536fb0ad-1b92-2c8b-c794-5ce832603ff4"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001BE91F9A4C0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<409 bytes>)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<135 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':letsdothis_music!letsdothis_music@letsdothis_music.tmi.twitch.tv JOIN #daroboto\r\n:lurxx!lurxx@lurxx.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b')\x14\xb1[', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b')\x14\xb1[', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 2914b15b
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\xc8:\xbe\xd4', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\xc8:\xbe\xd4', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: c83abed4
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'gA)\x10', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'gA)\x10', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 67412910
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'!\xb41\x84', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'!\xb41\x84', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 21b43184
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'_\xf9\xad\xa3', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'_\xf9\xad\xa3', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 5ff9ada3
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\xa13M\xf1', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\xa13M\xf1', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: a1334df1
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\xdbF\x95S', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\xdbF\x95S', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: db469553
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\x9cFtD', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\x9cFtD', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 9c467444
DEBUG:websockets.protocol:client - event = data_received(<349 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=e8bb40ac590feef7a1b128f427d78d14;color=;display-name=AndyVanDam;emotes=;flags=;id=9ab08bd7-4cf1-47e5-b201-9a91ce27368c;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420381881;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot left\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001BE91448CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001BE9144E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'{"action": "move", "direction": "left", "angle": 90, "duration": 0, "duraction": -1}', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001BE9153BD00>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001BE9153BB20>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001BE91448B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060622Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAMzmw15fLFBs9e2g09znc0sZKPrtFCLs2UBZjXF0cJ9LAiEAwtNxJjcAKtJ45yTuJCHvURATGNJ6QZfPnX/U52ycCuoqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDAYttjyU8nBH4qacWir4AkR1xGDiiUg/yC//9Gi7Mcmenj5B2hG1JDnHt8CoiuPjcsTjFZr52PqiilKlK8qjkQRoUZb4b1kNPs7b5jN2ULolD5s+ATsXmVXfl35oPw0DR2IEPu4WSIOdqBm69Y3pzWFn916tGUspWYmzfX4aUYfkKi6AZSt8QXxWpISo2lHR1GfVhl4wjg7gx3kmFdsgsCEW+zYLcInyHYiPQ71UPpDDg9MvohLFK6afwx4m+l+XozJwh0kIZxLJrFFuj4gNLvqZ2oP++CaSdThn78wQotH2/j2r4ZDBYeURpqNg3+QUVIF1X99Oe2o6li2oj4O6lNrP0mc5YWHy4Ynm353+6KhUk9aI1ifsrNPbt2Ie7+Zj2doYoOSvhr+fAOhmBFpJRKXDH4UHl1Vc2LBYDSbp/Wl8tso7G2jcFwhwyyAalqLuHkk/XpSTU6EnujT3tp4qLMjonDr7x8OvMW1mSzxmArZUdNsd1UA/euVVarCo3XU6dhn2TqXqwPIwsYnD/QU6pQFj7zSyTgxGIwU7rHqdgwYYt72buoRBG/1i+OGE9eF+MnzlKSXd7cmSkJPwarG8OibzTpIq+hkaT2EYvcgRx/GPRwuRJIDkpjQwIBOkVW5zzrtYhvwjGZBgfdHrnewyMl/B1K5i1s1vcT+zTgNpHhqmS994MAj8lSOGo4QnV+uGOLVQ6tGQz6MWXOYs1wyeoySPyl8bINlf+//zkRvyY5+veUlC9Vg=

host;x-amz-date;x-amz-security-token
65b121e6e4895b49a23531a29cacca5f0b3720b76d6e3e1b675a2f24d62e3d0d
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060622Z
20201115/ap-southeast-2/iotdata/aws4_request
6033713ad80237f760dcb78a6e3fce4698bfee9d1ef454b76a99175ae5a2b3fa
DEBUG:botocore.auth:Signature:
6e2ca7673805c901bb1f0bdf9799e53a0917546129702eb8f25083fc18936960
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060622Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAMzmw15fLFBs9e2g09znc0sZKPrtFCLs2UBZjXF0cJ9LAiEAwtNxJjcAKtJ45yTuJCHvURATGNJ6QZfPnX/U52ycCuoqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDAYttjyU8nBH4qacWir4AkR1xGDiiUg/yC//9Gi7Mcmenj5B2hG1JDnHt8CoiuPjcsTjFZr52PqiilKlK8qjkQRoUZb4b1kNPs7b5jN2ULolD5s+ATsXmVXfl35oPw0DR2IEPu4WSIOdqBm69Y3pzWFn916tGUspWYmzfX4aUYfkKi6AZSt8QXxWpISo2lHR1GfVhl4wjg7gx3kmFdsgsCEW+zYLcInyHYiPQ71UPpDDg9MvohLFK6afwx4m+l+XozJwh0kIZxLJrFFuj4gNLvqZ2oP++CaSdThn78wQotH2/j2r4ZDBYeURpqNg3+QUVIF1X99Oe2o6li2oj4O6lNrP0mc5YWHy4Ynm353+6KhUk9aI1ifsrNPbt2Ie7+Zj2doYoOSvhr+fAOhmBFpJRKXDH4UHl1Vc2LBYDSbp/Wl8tso7G2jcFwhwyyAalqLuHkk/XpSTU6EnujT3tp4qLMjonDr7x8OvMW1mSzxmArZUdNsd1UA/euVVarCo3XU6dhn2TqXqwPIwsYnD/QU6pQFj7zSyTgxGIwU7rHqdgwYYt72buoRBG/1i+OGE9eF+MnzlKSXd7cmSkJPwarG8OibzTpIq+hkaT2EYvcgRx/GPRwuRJIDkpjQwIBOkVW5zzrtYhvwjGZBgfdHrnewyMl/B1K5i1s1vcT+zTgNpHhqmS994MAj8lSOGo4QnV+uGOLVQ6tGQz6MWXOYs1wyeoySPyl8bINlf+//zkRvyY5+veUlC9Vg=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU25L54AP73/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=6e2ca7673805c901bb1f0bdf9799e53a0917546129702eb8f25083fc18936960', 'Content-Length': '84'}>
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:06:22 GMT', 'x-amzn-RequestId': 'b9fd2443-1803-4ef9-c2a1-6e38b74c2a13', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"b9fd2443-1803-4ef9-c2a1-6e38b74c2a13"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001BE91F9A4C0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :Sorry @andyvandam, i experienced an error turning left\r\n', rsv1=False, rsv2=False, rsv3=False)
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-45' coro=<event_message() done, defined at bot.py:56> exception=AttributeError("'NoneType' object has no attribute 'exception'")>
Traceback (most recent call last):
  File "bot.py", line 82, in event_message
    logger.debug(f"left respons: {resp}")
AttributeError: 'NoneType' object has no attribute 'debug'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "bot.py", line 92, in event_message
    logger.exception(e)
AttributeError: 'NoneType' object has no attribute 'exception'
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'sY\xde[', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'sY\xde[', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 7359de5b
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000001CD06B8F160>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'QDwxvqhz4dk6vqLHUR2bTQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 06:06:51 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'XLgcqEI51l7f6FsvcuhQXq5hmiM=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<425 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<50 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<60 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<409 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001CD06008CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001CD0600E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001CD060FBD30>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001CD060FBB50>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001CD06008B80>
DEBUG:botocore.hooks:Event choose-service-name: calling handler <function handle_service_name_alias at 0x000001CD05FEE5E0>
DEBUG:botocore.loaders:Loading JSON file: C:\Users\Andrew\.virtualenvs\chatbot-5QJP191A\lib\site-packages\botocore\data\sso\2019-06-10\service-2.json
DEBUG:botocore.hooks:Event creating-client-class.sso: calling handler <function add_generate_presigned_url at 0x000001CD05F9ECA0>
DEBUG:botocore.endpoint:Setting portal.sso timeout as (60, 60)
DEBUG:botocore.client:Registering retry handlers for service: sso
DEBUG:botocore.hooks:Event before-parameter-build.sso.GetRoleCredentials: calling handler <function generate_idempotent_uuid at 0x000001CD06008CA0>
DEBUG:botocore.hooks:Event before-call.sso.GetRoleCredentials: calling handler <function inject_api_version_header_if_needed at 0x000001CD0600E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=GetRoleCredentials) with params: {'url_path': '/federation/credentials', 'query_string': {'role_name': 'AWSAdministratorAccess', 'account_id': '883876707637'}, 'method': 'GET', 'headers': {'x-amz-sso_bearer_token': 'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'', 'url': 'https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001CD06B90F70>, 'has_streaming_input': False, 'auth_type': 'none'}}
DEBUG:botocore.hooks:Event request-created.sso.GetRoleCredentials: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001CD06B90EE0>>
DEBUG:botocore.hooks:Event choose-signer.sso.GetRoleCredentials: calling handler <function set_operation_specific_signer at 0x000001CD06008B80>
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637, headers={'x-amz-sso_bearer_token': b'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): portal.sso.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://portal.sso.ap-southeast-2.amazonaws.com:443 "GET /federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637 HTTP/1.1" 200 1100
DEBUG:botocore.parsers:Response headers: {'Date': 'Sun, 15 Nov 2020 06:06:53 GMT', 'Content-Type': 'application/json', 'Content-Length': '1100', 'Connection': 'keep-alive', 'Access-Control-Expose-Headers': 'RequestId', 'Cache-Control': 'no-cache', 'RequestId': 'de895197-ce3f-4d44-81db-49a8dd7ee57d', 'Server': 'AWS SSO'}
DEBUG:botocore.parsers:Response body:
b'{"roleCredentials":{"accessKeyId":"ASIA43SZIHU2SF2IBJV6","secretAccessKey":"rkl9BFgc5sD0yCtg1CTplwAo9pBuadEqdSRFxJIb","sessionToken":"IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkYwRAIgU/2pvBfg4LM1F1sN7+ruPbE3AYJO+k1zr3aJvunRLKYCIBxoFw4unDVj9v5vGofo+JkLx4RsaMxxN4d+3h86asuYKqQDCOf//////////wEQABoMODgzODc2NzA3NjM3IgyhmOsHQTqrxEzofCgq+AJ26IJv40RYC+G30m7Y20Oeu2sSdXjAi41VcDdBbc0MZakE9f2TVpSgfMEqjLhz+oGdErVHsdyLpMEP55FDJ6ORroctet23NWYwR60idcKlM+ZfnRCrtQYl2kCBxRn8PFCibBvjZdxz6huufrvPQ0H/Wj/Y7hBVUuwTemfZ2UTSNwEwM4qq/YBE/Z2ys7nTZK3HuqR9Rl3nJwuS5RN6ypPeJI+JqTsL/MXEFohGwP+TglhXCFdags6b7k8wvWnfs/eXg4cbgUddK7ylaJXSntjoWND5Eu1CLESTpHvaKGjmIzj1nsQ61dYxpSB5NNpoBe1WRiN6kIbYPFq1PZiSM7GeBelZ0QnFyRxFb9SqNWi+y87IXOboF/IXWa85m/ekFkGkq3a5zotHbPaljdQoDie13IEdZjusmQZt1n1Owx6Su0vIc8YI1gM5yaeJxaWs3BaalAMnYDd5+BpAl9+yaAjIB+3bFrQJ5KNMcWP0cuL7x5W8OJeXQkgWMP2Kw/0FOqcBEB+dvWxxrtkOhLNlUCKy1pm1ltk/VlZk4bP+tp4uMw9lF3iXgncS4quBKMV7pOY5aAlFUTj/vjn7n7lzAj2DNLyyduD7wNPRivOcUklSM5N3X0a3e5qbt1rOebGqytOvk0brQ2XiZHoyZ1eJ8/1lo15gEC6Q5lZLsZhhuKtkdMXa2F5Y/L1u5WgPXjsBfJnS+bHq/Z1rdZTQvYTHvYO/sb48qWZOm88=","expiration":1605424012000}}'
DEBUG:botocore.hooks:Event needs-retry.sso.GetRoleCredentials: calling handler <botocore.retryhandler.RetryHandler object at 0x000001CD06BF78E0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:botocore.credentials:Retrieved credentials will expire at: 2020-11-15 07:06:52+00:00
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060653Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkYwRAIgU/2pvBfg4LM1F1sN7+ruPbE3AYJO+k1zr3aJvunRLKYCIBxoFw4unDVj9v5vGofo+JkLx4RsaMxxN4d+3h86asuYKqQDCOf//////////wEQABoMODgzODc2NzA3NjM3IgyhmOsHQTqrxEzofCgq+AJ26IJv40RYC+G30m7Y20Oeu2sSdXjAi41VcDdBbc0MZakE9f2TVpSgfMEqjLhz+oGdErVHsdyLpMEP55FDJ6ORroctet23NWYwR60idcKlM+ZfnRCrtQYl2kCBxRn8PFCibBvjZdxz6huufrvPQ0H/Wj/Y7hBVUuwTemfZ2UTSNwEwM4qq/YBE/Z2ys7nTZK3HuqR9Rl3nJwuS5RN6ypPeJI+JqTsL/MXEFohGwP+TglhXCFdags6b7k8wvWnfs/eXg4cbgUddK7ylaJXSntjoWND5Eu1CLESTpHvaKGjmIzj1nsQ61dYxpSB5NNpoBe1WRiN6kIbYPFq1PZiSM7GeBelZ0QnFyRxFb9SqNWi+y87IXOboF/IXWa85m/ekFkGkq3a5zotHbPaljdQoDie13IEdZjusmQZt1n1Owx6Su0vIc8YI1gM5yaeJxaWs3BaalAMnYDd5+BpAl9+yaAjIB+3bFrQJ5KNMcWP0cuL7x5W8OJeXQkgWMP2Kw/0FOqcBEB+dvWxxrtkOhLNlUCKy1pm1ltk/VlZk4bP+tp4uMw9lF3iXgncS4quBKMV7pOY5aAlFUTj/vjn7n7lzAj2DNLyyduD7wNPRivOcUklSM5N3X0a3e5qbt1rOebGqytOvk0brQ2XiZHoyZ1eJ8/1lo15gEC6Q5lZLsZhhuKtkdMXa2F5Y/L1u5WgPXjsBfJnS+bHq/Z1rdZTQvYTHvYO/sb48qWZOm88=

host;x-amz-date;x-amz-security-token
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060653Z
20201115/ap-southeast-2/iotdata/aws4_request
4c34e9d63bb42658c523d22fdb52c07b41460fea3e318033f2ec1f47250d214d
DEBUG:botocore.auth:Signature:
ca0c2c89746212be0615c02446d29069dea4dbf5cba795a1c8b5d33bbf6ebff2
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060653Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkYwRAIgU/2pvBfg4LM1F1sN7+ruPbE3AYJO+k1zr3aJvunRLKYCIBxoFw4unDVj9v5vGofo+JkLx4RsaMxxN4d+3h86asuYKqQDCOf//////////wEQABoMODgzODc2NzA3NjM3IgyhmOsHQTqrxEzofCgq+AJ26IJv40RYC+G30m7Y20Oeu2sSdXjAi41VcDdBbc0MZakE9f2TVpSgfMEqjLhz+oGdErVHsdyLpMEP55FDJ6ORroctet23NWYwR60idcKlM+ZfnRCrtQYl2kCBxRn8PFCibBvjZdxz6huufrvPQ0H/Wj/Y7hBVUuwTemfZ2UTSNwEwM4qq/YBE/Z2ys7nTZK3HuqR9Rl3nJwuS5RN6ypPeJI+JqTsL/MXEFohGwP+TglhXCFdags6b7k8wvWnfs/eXg4cbgUddK7ylaJXSntjoWND5Eu1CLESTpHvaKGjmIzj1nsQ61dYxpSB5NNpoBe1WRiN6kIbYPFq1PZiSM7GeBelZ0QnFyRxFb9SqNWi+y87IXOboF/IXWa85m/ekFkGkq3a5zotHbPaljdQoDie13IEdZjusmQZt1n1Owx6Su0vIc8YI1gM5yaeJxaWs3BaalAMnYDd5+BpAl9+yaAjIB+3bFrQJ5KNMcWP0cuL7x5W8OJeXQkgWMP2Kw/0FOqcBEB+dvWxxrtkOhLNlUCKy1pm1ltk/VlZk4bP+tp4uMw9lF3iXgncS4quBKMV7pOY5aAlFUTj/vjn7n7lzAj2DNLyyduD7wNPRivOcUklSM5N3X0a3e5qbt1rOebGqytOvk0brQ2XiZHoyZ1eJ8/1lo15gEC6Q5lZLsZhhuKtkdMXa2F5Y/L1u5WgPXjsBfJnS+bHq/Z1rdZTQvYTHvYO/sb48qWZOm88=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU2SF2IBJV6/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=ca0c2c89746212be0615c02446d29069dea4dbf5cba795a1c8b5d33bbf6ebff2', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:06:53 GMT', 'x-amzn-RequestId': '45f21f1e-809c-d35b-0b95-d2425b547c90', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"45f21f1e-809c-d35b-0b95-d2425b547c90"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001CD06B5A4F0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<349 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=b0cdc413447b829eeec79286a311456a;color=;display-name=AndyVanDam;emotes=;flags=;id=a16303d6-d347-480a-91fb-dc852a8f2f63;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420417878;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot left\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001CD06008CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001CD0600E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'{"action": "move", "direction": "left", "angle": 90, "duration": 0, "duraction": -1}', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001CD060FBD30>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001CD060FBB50>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001CD06008B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060658Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkYwRAIgU/2pvBfg4LM1F1sN7+ruPbE3AYJO+k1zr3aJvunRLKYCIBxoFw4unDVj9v5vGofo+JkLx4RsaMxxN4d+3h86asuYKqQDCOf//////////wEQABoMODgzODc2NzA3NjM3IgyhmOsHQTqrxEzofCgq+AJ26IJv40RYC+G30m7Y20Oeu2sSdXjAi41VcDdBbc0MZakE9f2TVpSgfMEqjLhz+oGdErVHsdyLpMEP55FDJ6ORroctet23NWYwR60idcKlM+ZfnRCrtQYl2kCBxRn8PFCibBvjZdxz6huufrvPQ0H/Wj/Y7hBVUuwTemfZ2UTSNwEwM4qq/YBE/Z2ys7nTZK3HuqR9Rl3nJwuS5RN6ypPeJI+JqTsL/MXEFohGwP+TglhXCFdags6b7k8wvWnfs/eXg4cbgUddK7ylaJXSntjoWND5Eu1CLESTpHvaKGjmIzj1nsQ61dYxpSB5NNpoBe1WRiN6kIbYPFq1PZiSM7GeBelZ0QnFyRxFb9SqNWi+y87IXOboF/IXWa85m/ekFkGkq3a5zotHbPaljdQoDie13IEdZjusmQZt1n1Owx6Su0vIc8YI1gM5yaeJxaWs3BaalAMnYDd5+BpAl9+yaAjIB+3bFrQJ5KNMcWP0cuL7x5W8OJeXQkgWMP2Kw/0FOqcBEB+dvWxxrtkOhLNlUCKy1pm1ltk/VlZk4bP+tp4uMw9lF3iXgncS4quBKMV7pOY5aAlFUTj/vjn7n7lzAj2DNLyyduD7wNPRivOcUklSM5N3X0a3e5qbt1rOebGqytOvk0brQ2XiZHoyZ1eJ8/1lo15gEC6Q5lZLsZhhuKtkdMXa2F5Y/L1u5WgPXjsBfJnS+bHq/Z1rdZTQvYTHvYO/sb48qWZOm88=

host;x-amz-date;x-amz-security-token
65b121e6e4895b49a23531a29cacca5f0b3720b76d6e3e1b675a2f24d62e3d0d
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060658Z
20201115/ap-southeast-2/iotdata/aws4_request
222785e77637841a2f2dc39e1bafe331326fff5b90b5e7a75826e4b9dd7de430
DEBUG:botocore.auth:Signature:
aefa1f8997b2ca57621986674e7a7776198baa950a096b725bad0b523f459654
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060658Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkYwRAIgU/2pvBfg4LM1F1sN7+ruPbE3AYJO+k1zr3aJvunRLKYCIBxoFw4unDVj9v5vGofo+JkLx4RsaMxxN4d+3h86asuYKqQDCOf//////////wEQABoMODgzODc2NzA3NjM3IgyhmOsHQTqrxEzofCgq+AJ26IJv40RYC+G30m7Y20Oeu2sSdXjAi41VcDdBbc0MZakE9f2TVpSgfMEqjLhz+oGdErVHsdyLpMEP55FDJ6ORroctet23NWYwR60idcKlM+ZfnRCrtQYl2kCBxRn8PFCibBvjZdxz6huufrvPQ0H/Wj/Y7hBVUuwTemfZ2UTSNwEwM4qq/YBE/Z2ys7nTZK3HuqR9Rl3nJwuS5RN6ypPeJI+JqTsL/MXEFohGwP+TglhXCFdags6b7k8wvWnfs/eXg4cbgUddK7ylaJXSntjoWND5Eu1CLESTpHvaKGjmIzj1nsQ61dYxpSB5NNpoBe1WRiN6kIbYPFq1PZiSM7GeBelZ0QnFyRxFb9SqNWi+y87IXOboF/IXWa85m/ekFkGkq3a5zotHbPaljdQoDie13IEdZjusmQZt1n1Owx6Su0vIc8YI1gM5yaeJxaWs3BaalAMnYDd5+BpAl9+yaAjIB+3bFrQJ5KNMcWP0cuL7x5W8OJeXQkgWMP2Kw/0FOqcBEB+dvWxxrtkOhLNlUCKy1pm1ltk/VlZk4bP+tp4uMw9lF3iXgncS4quBKMV7pOY5aAlFUTj/vjn7n7lzAj2DNLyyduD7wNPRivOcUklSM5N3X0a3e5qbt1rOebGqytOvk0brQ2XiZHoyZ1eJ8/1lo15gEC6Q5lZLsZhhuKtkdMXa2F5Y/L1u5WgPXjsBfJnS+bHq/Z1rdZTQvYTHvYO/sb48qWZOm88=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU2SF2IBJV6/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=aefa1f8997b2ca57621986674e7a7776198baa950a096b725bad0b523f459654', 'Content-Length': '84'}>
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:06:58 GMT', 'x-amzn-RequestId': '304ec996-c713-c370-c061-13039a1540ff', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"304ec996-c713-c370-c061-13039a1540ff"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001CD06B5A4F0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :Sorry @andyvandam, i experienced an error turning left\r\n', rsv1=False, rsv2=False, rsv3=False)
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-41' coro=<event_message() done, defined at bot.py:56> exception=AttributeError("'NoneType' object has no attribute 'exception'")>
Traceback (most recent call last):
  File "bot.py", line 82, in event_message
    logger.debug(f"left respons: {resp}")
AttributeError: 'NoneType' object has no attribute 'debug'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "bot.py", line 92, in event_message
    logger.exception(e)
AttributeError: 'NoneType' object has no attribute 'exception'
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\x8c\xaf\xdc\xca', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\x8c\xaf\xdc\xca', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 8cafdcca
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000001FB51A6E160>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'oNFjzUMTSGr628nd5IhARA=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 06:07:25 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 'heOEkKeAzESC6N2r5sgAQt8JUUg=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<473 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<60 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<132 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<277 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001FB50EE8CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001FB50EED550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001FB50FDBC10>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001FB50FDBA30>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001FB50EE8B80>
DEBUG:botocore.hooks:Event choose-service-name: calling handler <function handle_service_name_alias at 0x000001FB50ECF5E0>
DEBUG:botocore.loaders:Loading JSON file: C:\Users\Andrew\.virtualenvs\chatbot-5QJP191A\lib\site-packages\botocore\data\sso\2019-06-10\service-2.json
DEBUG:botocore.hooks:Event creating-client-class.sso: calling handler <function add_generate_presigned_url at 0x000001FB50E7FCA0>
DEBUG:botocore.endpoint:Setting portal.sso timeout as (60, 60)
DEBUG:botocore.client:Registering retry handlers for service: sso
DEBUG:botocore.hooks:Event before-parameter-build.sso.GetRoleCredentials: calling handler <function generate_idempotent_uuid at 0x000001FB50EE8CA0>
DEBUG:botocore.hooks:Event before-call.sso.GetRoleCredentials: calling handler <function inject_api_version_header_if_needed at 0x000001FB50EED550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=GetRoleCredentials) with params: {'url_path': '/federation/credentials', 'query_string': {'role_name': 'AWSAdministratorAccess', 'account_id': '883876707637'}, 'method': 'GET', 'headers': {'x-amz-sso_bearer_token': 'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'', 'url': 'https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001FB51A6FE50>, 'has_streaming_input': False, 'auth_type': 'none'}}
DEBUG:botocore.hooks:Event request-created.sso.GetRoleCredentials: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001FB51A6FDC0>>
DEBUG:botocore.hooks:Event choose-signer.sso.GetRoleCredentials: calling handler <function set_operation_specific_signer at 0x000001FB50EE8B80>
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637, headers={'x-amz-sso_bearer_token': b'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): portal.sso.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://portal.sso.ap-southeast-2.amazonaws.com:443 "GET /federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637 HTTP/1.1" 200 1100
DEBUG:botocore.parsers:Response headers: {'Date': 'Sun, 15 Nov 2020 06:07:27 GMT', 'Content-Type': 'application/json', 'Content-Length': '1100', 'Connection': 'keep-alive', 'Access-Control-Expose-Headers': 'RequestId', 'Cache-Control': 'no-cache', 'RequestId': '9cb7e78c-c46a-4902-9cd8-cb6fecd3c1c8', 'Server': 'AWS SSO'}
DEBUG:botocore.parsers:Response body:
b'{"roleCredentials":{"accessKeyId":"ASIA43SZIHU22ES5HAQB","secretAccessKey":"QuKh8l97qSMN83vqCOjYffbHkPwvXJd9ixS8aSzk","sessionToken":"IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgcGatjPiX1b1/dpOz5A+pXvMjl10NwD4VKQ9ycD0VvtECIQCaRdAoNV8BdwnVfERNgHCO4duycDDQh3T4eWbY26g5tCqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMUZHC6SV32QThBQWQKvgC27Ygd9yFNd86q0jR79W1+UrR8x56ZfziYJ/gmFTQp72Q7EzuZt8p5CoqXbgxUA+3wKc9O+a6V2ErjrwkTWvoJnzd2OdpX5V1349coHeRbvzoenL5pTfylxU5qUCpcA519ANU51XObxAyECdN2BHHpZ2QB7/A12ePStOp4qajCfwRi+8G1am7TE7xH0u6BqaeDYAaVABi0oTc9rwdo+J4WNL3hjar9AQsA8eW/F6VgnGcQmew1RpvlpnlOA8Qnplsg/rWG922U3sf6R9rgT2uM8zc1PltuQrY8j9IlN+HT4LSZ8f/AiXz5OddYF1JzbkxDEj0UKY7Wfkf64OHGouvl/ACfQtuvMxyrBvj9H5EoNgCLY1GK89AI3IoDf8FOS8fOPkmEDYAR0SpqvgPDUPM12RAPlOqCy9IKmaprfTfQhE8FEMCM90dWIm86mwqYTnmLnHgpppUk6JmyqGXh76/9H8lLz17Qk2vyL1QZdoubJbdWtXfTbgYwTCfi8P9BTqmAYg1NGZ13PNRQDloM32Lxd3MZUC3PjezTY6VDElFG8QtfOfKgc4mLduf8I0dM56F0d048BY6XM+QlOpYMY00Qtipw9jLWQoULMQ+wNvtYP1ad3Gkyrn1fljExpDQOUB0in4gSxz3UjJujvS+hlqIDi6dTgkI5I3BXyTW/bZBoJyGZo+viW1hxBb7LzBgd8c5OC54tNAd2T84iH35XBse+1TUooXBy64=","expiration":1605424046000}}'
DEBUG:botocore.hooks:Event needs-retry.sso.GetRoleCredentials: calling handler <botocore.retryhandler.RetryHandler object at 0x000001FB51AD67C0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:botocore.credentials:Retrieved credentials will expire at: 2020-11-15 07:07:26+00:00
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060727Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgcGatjPiX1b1/dpOz5A+pXvMjl10NwD4VKQ9ycD0VvtECIQCaRdAoNV8BdwnVfERNgHCO4duycDDQh3T4eWbY26g5tCqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMUZHC6SV32QThBQWQKvgC27Ygd9yFNd86q0jR79W1+UrR8x56ZfziYJ/gmFTQp72Q7EzuZt8p5CoqXbgxUA+3wKc9O+a6V2ErjrwkTWvoJnzd2OdpX5V1349coHeRbvzoenL5pTfylxU5qUCpcA519ANU51XObxAyECdN2BHHpZ2QB7/A12ePStOp4qajCfwRi+8G1am7TE7xH0u6BqaeDYAaVABi0oTc9rwdo+J4WNL3hjar9AQsA8eW/F6VgnGcQmew1RpvlpnlOA8Qnplsg/rWG922U3sf6R9rgT2uM8zc1PltuQrY8j9IlN+HT4LSZ8f/AiXz5OddYF1JzbkxDEj0UKY7Wfkf64OHGouvl/ACfQtuvMxyrBvj9H5EoNgCLY1GK89AI3IoDf8FOS8fOPkmEDYAR0SpqvgPDUPM12RAPlOqCy9IKmaprfTfQhE8FEMCM90dWIm86mwqYTnmLnHgpppUk6JmyqGXh76/9H8lLz17Qk2vyL1QZdoubJbdWtXfTbgYwTCfi8P9BTqmAYg1NGZ13PNRQDloM32Lxd3MZUC3PjezTY6VDElFG8QtfOfKgc4mLduf8I0dM56F0d048BY6XM+QlOpYMY00Qtipw9jLWQoULMQ+wNvtYP1ad3Gkyrn1fljExpDQOUB0in4gSxz3UjJujvS+hlqIDi6dTgkI5I3BXyTW/bZBoJyGZo+viW1hxBb7LzBgd8c5OC54tNAd2T84iH35XBse+1TUooXBy64=

host;x-amz-date;x-amz-security-token
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060727Z
20201115/ap-southeast-2/iotdata/aws4_request
70c44200b5dc7f119f4acbf25181eaeb8aa4e18192a55efe6f5e2ae46fe72769
DEBUG:botocore.auth:Signature:
6df5793a995cc73aced1a67fd02d248ca27dcd9e30330ea32552860dcfe7bce1
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060727Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgcGatjPiX1b1/dpOz5A+pXvMjl10NwD4VKQ9ycD0VvtECIQCaRdAoNV8BdwnVfERNgHCO4duycDDQh3T4eWbY26g5tCqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMUZHC6SV32QThBQWQKvgC27Ygd9yFNd86q0jR79W1+UrR8x56ZfziYJ/gmFTQp72Q7EzuZt8p5CoqXbgxUA+3wKc9O+a6V2ErjrwkTWvoJnzd2OdpX5V1349coHeRbvzoenL5pTfylxU5qUCpcA519ANU51XObxAyECdN2BHHpZ2QB7/A12ePStOp4qajCfwRi+8G1am7TE7xH0u6BqaeDYAaVABi0oTc9rwdo+J4WNL3hjar9AQsA8eW/F6VgnGcQmew1RpvlpnlOA8Qnplsg/rWG922U3sf6R9rgT2uM8zc1PltuQrY8j9IlN+HT4LSZ8f/AiXz5OddYF1JzbkxDEj0UKY7Wfkf64OHGouvl/ACfQtuvMxyrBvj9H5EoNgCLY1GK89AI3IoDf8FOS8fOPkmEDYAR0SpqvgPDUPM12RAPlOqCy9IKmaprfTfQhE8FEMCM90dWIm86mwqYTnmLnHgpppUk6JmyqGXh76/9H8lLz17Qk2vyL1QZdoubJbdWtXfTbgYwTCfi8P9BTqmAYg1NGZ13PNRQDloM32Lxd3MZUC3PjezTY6VDElFG8QtfOfKgc4mLduf8I0dM56F0d048BY6XM+QlOpYMY00Qtipw9jLWQoULMQ+wNvtYP1ad3Gkyrn1fljExpDQOUB0in4gSxz3UjJujvS+hlqIDi6dTgkI5I3BXyTW/bZBoJyGZo+viW1hxBb7LzBgd8c5OC54tNAd2T84iH35XBse+1TUooXBy64=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU22ES5HAQB/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=6df5793a995cc73aced1a67fd02d248ca27dcd9e30330ea32552860dcfe7bce1', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:07:27 GMT', 'x-amzn-RequestId': '3de7b496-9e30-0bc2-ef47-ddc0328e4072', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"3de7b496-9e30-0bc2-ef47-ddc0328e4072"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001FB51A3A3D0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<349 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=8639f445e5e4ca81b944c8b19b4ecac2;color=;display-name=AndyVanDam;emotes=;flags=;id=2afdeb1f-5cb7-4a3b-a80e-72fc417ad312;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420447880;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot left\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001FB50EE8CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001FB50EED550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'{"action": "move", "direction": "left", "angle": 90, "duration": 0, "duraction": -1}', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001FB50FDBC10>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001FB50FDBA30>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001FB50EE8B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060728Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgcGatjPiX1b1/dpOz5A+pXvMjl10NwD4VKQ9ycD0VvtECIQCaRdAoNV8BdwnVfERNgHCO4duycDDQh3T4eWbY26g5tCqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMUZHC6SV32QThBQWQKvgC27Ygd9yFNd86q0jR79W1+UrR8x56ZfziYJ/gmFTQp72Q7EzuZt8p5CoqXbgxUA+3wKc9O+a6V2ErjrwkTWvoJnzd2OdpX5V1349coHeRbvzoenL5pTfylxU5qUCpcA519ANU51XObxAyECdN2BHHpZ2QB7/A12ePStOp4qajCfwRi+8G1am7TE7xH0u6BqaeDYAaVABi0oTc9rwdo+J4WNL3hjar9AQsA8eW/F6VgnGcQmew1RpvlpnlOA8Qnplsg/rWG922U3sf6R9rgT2uM8zc1PltuQrY8j9IlN+HT4LSZ8f/AiXz5OddYF1JzbkxDEj0UKY7Wfkf64OHGouvl/ACfQtuvMxyrBvj9H5EoNgCLY1GK89AI3IoDf8FOS8fOPkmEDYAR0SpqvgPDUPM12RAPlOqCy9IKmaprfTfQhE8FEMCM90dWIm86mwqYTnmLnHgpppUk6JmyqGXh76/9H8lLz17Qk2vyL1QZdoubJbdWtXfTbgYwTCfi8P9BTqmAYg1NGZ13PNRQDloM32Lxd3MZUC3PjezTY6VDElFG8QtfOfKgc4mLduf8I0dM56F0d048BY6XM+QlOpYMY00Qtipw9jLWQoULMQ+wNvtYP1ad3Gkyrn1fljExpDQOUB0in4gSxz3UjJujvS+hlqIDi6dTgkI5I3BXyTW/bZBoJyGZo+viW1hxBb7LzBgd8c5OC54tNAd2T84iH35XBse+1TUooXBy64=

host;x-amz-date;x-amz-security-token
65b121e6e4895b49a23531a29cacca5f0b3720b76d6e3e1b675a2f24d62e3d0d
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060728Z
20201115/ap-southeast-2/iotdata/aws4_request
12899663415ecc6d103d1920a7f4a98a61ac57fbc7a96cbfd39ae941f2d0234d
DEBUG:botocore.auth:Signature:
44418d01eb3429222907109045f5bf1f3009601a319ac83d9d02138f3409bc7a
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060728Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgcGatjPiX1b1/dpOz5A+pXvMjl10NwD4VKQ9ycD0VvtECIQCaRdAoNV8BdwnVfERNgHCO4duycDDQh3T4eWbY26g5tCqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMUZHC6SV32QThBQWQKvgC27Ygd9yFNd86q0jR79W1+UrR8x56ZfziYJ/gmFTQp72Q7EzuZt8p5CoqXbgxUA+3wKc9O+a6V2ErjrwkTWvoJnzd2OdpX5V1349coHeRbvzoenL5pTfylxU5qUCpcA519ANU51XObxAyECdN2BHHpZ2QB7/A12ePStOp4qajCfwRi+8G1am7TE7xH0u6BqaeDYAaVABi0oTc9rwdo+J4WNL3hjar9AQsA8eW/F6VgnGcQmew1RpvlpnlOA8Qnplsg/rWG922U3sf6R9rgT2uM8zc1PltuQrY8j9IlN+HT4LSZ8f/AiXz5OddYF1JzbkxDEj0UKY7Wfkf64OHGouvl/ACfQtuvMxyrBvj9H5EoNgCLY1GK89AI3IoDf8FOS8fOPkmEDYAR0SpqvgPDUPM12RAPlOqCy9IKmaprfTfQhE8FEMCM90dWIm86mwqYTnmLnHgpppUk6JmyqGXh76/9H8lLz17Qk2vyL1QZdoubJbdWtXfTbgYwTCfi8P9BTqmAYg1NGZ13PNRQDloM32Lxd3MZUC3PjezTY6VDElFG8QtfOfKgc4mLduf8I0dM56F0d048BY6XM+QlOpYMY00Qtipw9jLWQoULMQ+wNvtYP1ad3Gkyrn1fljExpDQOUB0in4gSxz3UjJujvS+hlqIDi6dTgkI5I3BXyTW/bZBoJyGZo+viW1hxBb7LzBgd8c5OC54tNAd2T84iH35XBse+1TUooXBy64=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU22ES5HAQB/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=44418d01eb3429222907109045f5bf1f3009601a319ac83d9d02138f3409bc7a', 'Content-Length': '84'}>
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:07:28 GMT', 'x-amzn-RequestId': '1a1ccbf5-260a-ee35-bd60-16199b8ef212', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"1a1ccbf5-260a-ee35-bd60-16199b8ef212"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001FB51A3A3D0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :Sorry @andyvandam, i experienced an error turning left\r\n', rsv1=False, rsv2=False, rsv3=False)
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-37' coro=<event_message() done, defined at bot.py:56> exception=AttributeError("'NoneType' object has no attribute 'exception'")>
Traceback (most recent call last):
  File "bot.py", line 82, in event_message
    logger.debug(f"left respons: {resp}")
AttributeError: 'NoneType' object has no attribute 'debug'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "bot.py", line 92, in event_message
    logger.exception(e)
AttributeError: 'NoneType' object has no attribute 'exception'
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<349 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=db99cfba53dd73656333f7c5c51fe163;color=;display-name=AndyVanDam;emotes=;flags=;id=eee6c179-9151-4bd1-bf49-551dbac94d6e;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420453640;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot left\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001FB50EE8CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001FB50EED550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'{"action": "move", "direction": "left", "angle": 90, "duration": 0, "duraction": -1}', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001FB50FDBC10>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001FB50FDBA30>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001FB50EE8B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060734Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgcGatjPiX1b1/dpOz5A+pXvMjl10NwD4VKQ9ycD0VvtECIQCaRdAoNV8BdwnVfERNgHCO4duycDDQh3T4eWbY26g5tCqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMUZHC6SV32QThBQWQKvgC27Ygd9yFNd86q0jR79W1+UrR8x56ZfziYJ/gmFTQp72Q7EzuZt8p5CoqXbgxUA+3wKc9O+a6V2ErjrwkTWvoJnzd2OdpX5V1349coHeRbvzoenL5pTfylxU5qUCpcA519ANU51XObxAyECdN2BHHpZ2QB7/A12ePStOp4qajCfwRi+8G1am7TE7xH0u6BqaeDYAaVABi0oTc9rwdo+J4WNL3hjar9AQsA8eW/F6VgnGcQmew1RpvlpnlOA8Qnplsg/rWG922U3sf6R9rgT2uM8zc1PltuQrY8j9IlN+HT4LSZ8f/AiXz5OddYF1JzbkxDEj0UKY7Wfkf64OHGouvl/ACfQtuvMxyrBvj9H5EoNgCLY1GK89AI3IoDf8FOS8fOPkmEDYAR0SpqvgPDUPM12RAPlOqCy9IKmaprfTfQhE8FEMCM90dWIm86mwqYTnmLnHgpppUk6JmyqGXh76/9H8lLz17Qk2vyL1QZdoubJbdWtXfTbgYwTCfi8P9BTqmAYg1NGZ13PNRQDloM32Lxd3MZUC3PjezTY6VDElFG8QtfOfKgc4mLduf8I0dM56F0d048BY6XM+QlOpYMY00Qtipw9jLWQoULMQ+wNvtYP1ad3Gkyrn1fljExpDQOUB0in4gSxz3UjJujvS+hlqIDi6dTgkI5I3BXyTW/bZBoJyGZo+viW1hxBb7LzBgd8c5OC54tNAd2T84iH35XBse+1TUooXBy64=

host;x-amz-date;x-amz-security-token
65b121e6e4895b49a23531a29cacca5f0b3720b76d6e3e1b675a2f24d62e3d0d
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060734Z
20201115/ap-southeast-2/iotdata/aws4_request
4630d8e5c35d6b07ada0e597901d8d6a42078503835bff3732901d97d9fbb1c7
DEBUG:botocore.auth:Signature:
26a04a50a850451c34e81191bc99f0e316946373e2173e92d408255577aa4f4a
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060734Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgcGatjPiX1b1/dpOz5A+pXvMjl10NwD4VKQ9ycD0VvtECIQCaRdAoNV8BdwnVfERNgHCO4duycDDQh3T4eWbY26g5tCqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMUZHC6SV32QThBQWQKvgC27Ygd9yFNd86q0jR79W1+UrR8x56ZfziYJ/gmFTQp72Q7EzuZt8p5CoqXbgxUA+3wKc9O+a6V2ErjrwkTWvoJnzd2OdpX5V1349coHeRbvzoenL5pTfylxU5qUCpcA519ANU51XObxAyECdN2BHHpZ2QB7/A12ePStOp4qajCfwRi+8G1am7TE7xH0u6BqaeDYAaVABi0oTc9rwdo+J4WNL3hjar9AQsA8eW/F6VgnGcQmew1RpvlpnlOA8Qnplsg/rWG922U3sf6R9rgT2uM8zc1PltuQrY8j9IlN+HT4LSZ8f/AiXz5OddYF1JzbkxDEj0UKY7Wfkf64OHGouvl/ACfQtuvMxyrBvj9H5EoNgCLY1GK89AI3IoDf8FOS8fOPkmEDYAR0SpqvgPDUPM12RAPlOqCy9IKmaprfTfQhE8FEMCM90dWIm86mwqYTnmLnHgpppUk6JmyqGXh76/9H8lLz17Qk2vyL1QZdoubJbdWtXfTbgYwTCfi8P9BTqmAYg1NGZ13PNRQDloM32Lxd3MZUC3PjezTY6VDElFG8QtfOfKgc4mLduf8I0dM56F0d048BY6XM+QlOpYMY00Qtipw9jLWQoULMQ+wNvtYP1ad3Gkyrn1fljExpDQOUB0in4gSxz3UjJujvS+hlqIDi6dTgkI5I3BXyTW/bZBoJyGZo+viW1hxBb7LzBgd8c5OC54tNAd2T84iH35XBse+1TUooXBy64=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU22ES5HAQB/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=26a04a50a850451c34e81191bc99f0e316946373e2173e92d408255577aa4f4a', 'Content-Length': '84'}>
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:07:33 GMT', 'x-amzn-RequestId': '366000ab-2ceb-9d9c-d6b2-5c8b8e11c5bb', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"366000ab-2ceb-9d9c-d6b2-5c8b8e11c5bb"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001FB51A3A3D0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :Sorry @andyvandam, i experienced an error turning left\r\n', rsv1=False, rsv2=False, rsv3=False)
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-47' coro=<event_message() done, defined at bot.py:56> exception=AttributeError("'NoneType' object has no attribute 'exception'")>
Traceback (most recent call last):
  File "bot.py", line 82, in event_message
    logger.debug(f"left respons: {resp}")
AttributeError: 'NoneType' object has no attribute 'debug'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "bot.py", line 92, in event_message
    logger.exception(e)
AttributeError: 'NoneType' object has no attribute 'exception'
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\xb3F\xcb\xec', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\xb3F\xcb\xec', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: b346cbec
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000001C49F9D00A0>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'ep9RCPzxDIyKU0dQ5fY3Sw=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 06:08:24 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', 's9YhS3M9O8hRruu5ylNFCJUWlWg=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<473 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:websockets.protocol:client - event = data_received(<463 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001C49EE48D30>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001C49EE4D5E0>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001C49EF3BC70>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001C49EF3BA90>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001C49EE48C10>
DEBUG:botocore.hooks:Event choose-service-name: calling handler <function handle_service_name_alias at 0x000001C49EE2E670>
DEBUG:botocore.loaders:Loading JSON file: C:\Users\Andrew\.virtualenvs\chatbot-5QJP191A\lib\site-packages\botocore\data\sso\2019-06-10\service-2.json
DEBUG:botocore.hooks:Event creating-client-class.sso: calling handler <function add_generate_presigned_url at 0x000001C49EDDED30>
DEBUG:botocore.endpoint:Setting portal.sso timeout as (60, 60)
DEBUG:botocore.client:Registering retry handlers for service: sso
DEBUG:botocore.hooks:Event before-parameter-build.sso.GetRoleCredentials: calling handler <function generate_idempotent_uuid at 0x000001C49EE48D30>
DEBUG:botocore.hooks:Event before-call.sso.GetRoleCredentials: calling handler <function inject_api_version_header_if_needed at 0x000001C49EE4D5E0>
DEBUG:botocore.endpoint:Making request for OperationModel(name=GetRoleCredentials) with params: {'url_path': '/federation/credentials', 'query_string': {'role_name': 'AWSAdministratorAccess', 'account_id': '883876707637'}, 'method': 'GET', 'headers': {'x-amz-sso_bearer_token': 'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'', 'url': 'https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001C49F9CEE20>, 'has_streaming_input': False, 'auth_type': 'none'}}
DEBUG:botocore.hooks:Event request-created.sso.GetRoleCredentials: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001C49F9CED90>>
DEBUG:botocore.hooks:Event choose-signer.sso.GetRoleCredentials: calling handler <function set_operation_specific_signer at 0x000001C49EE48C10>
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637, headers={'x-amz-sso_bearer_token': b'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): portal.sso.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://portal.sso.ap-southeast-2.amazonaws.com:443 "GET /federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637 HTTP/1.1" 200 1100
DEBUG:botocore.parsers:Response headers: {'Date': 'Sun, 15 Nov 2020 06:08:25 GMT', 'Content-Type': 'application/json', 'Content-Length': '1100', 'Connection': 'keep-alive', 'Access-Control-Expose-Headers': 'RequestId', 'Cache-Control': 'no-cache', 'RequestId': 'a5014a62-8fc7-4dea-8858-a8de1a787cf8', 'Server': 'AWS SSO'}
DEBUG:botocore.parsers:Response body:
b'{"roleCredentials":{"accessKeyId":"ASIA43SZIHU22QHA7O3A","secretAccessKey":"/sarF1zl4T9qeyW0xMOBuoXg6f60ILxQq1T0bD+d","sessionToken":"IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAM+cLEsoVqMZCzOWZjQ2MbCdmNX8gUVgUiDg3XYVAHuMAiEA242QRiiDShLyslNY+EAo/OwjHaWUS9RmsOQjeWx18ecqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDNr0yM3ugCiliuZ+3ir4AgXtLxAVyQom0yxlnmeBT0X8C47pwaoZTWWksw486ETieGlhc1D9vQ0zF+zWJm8q78cRcXg4oobRqfKOM218DJYaXMFpt6VVvU/qUitPf6mOA0LJ2YRlIgjzl46iIF02s3kbmbqSsjlkP17VsVj3d2clS8pgf/KQIEZdF/6Cbfz/RaeiKrXjgZvBWeb8Fdh+1DLjOlp8I4X2rvVGf+gUODaAG97jvWEE6f3fWIxQXmNvhJCDydtnKdDhDiWmFH3A3Vn+btSq9uhBVo8AKkjbsVVnIvWvmolhRtRHgZKwVOWz20aQinSiTqHX+E9YBo1rpUPL+m5zuxgEYZ51Sj7kg6PhW5cIM+mr9bXmTnfAMKosuizm0Mdb951vRMaOIblRjomae2xnOwsgX3P5zXiIUT/skpB1GhZ36WhSgw/0JTLNPydqKC0crPiPIVpxv6iZRhPKogwQHghRspykiydoeUzj5y7E8f2K9GoLokDji9RN6sB4854Ds5Ew2YvD/QU6pQHmLtzA616DVD/2K+hyykEBIn0lJfxE2ywwunJq34NGVhd3UdRZK3VAjEPb0ak2YxC7Nrj3d/aqCsje3v4vtyN0Qn0J5mtC0y8wTy65jNIYC3wzv1bLCUICVnT8/qn1wG8rqounXp8kU174wrLi2HMmhtTs+siJccpxmCgUX77CSIuIn/+v3S0QIFokXZ/u6nzyt4aRcT6S1cnZizTZhv4af8LY8P4=","expiration":1605424104000}}'
DEBUG:botocore.hooks:Event needs-retry.sso.GetRoleCredentials: calling handler <botocore.retryhandler.RetryHandler object at 0x000001C49FA367F0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:botocore.credentials:Retrieved credentials will expire at: 2020-11-15 07:08:24+00:00
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060826Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAM+cLEsoVqMZCzOWZjQ2MbCdmNX8gUVgUiDg3XYVAHuMAiEA242QRiiDShLyslNY+EAo/OwjHaWUS9RmsOQjeWx18ecqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDNr0yM3ugCiliuZ+3ir4AgXtLxAVyQom0yxlnmeBT0X8C47pwaoZTWWksw486ETieGlhc1D9vQ0zF+zWJm8q78cRcXg4oobRqfKOM218DJYaXMFpt6VVvU/qUitPf6mOA0LJ2YRlIgjzl46iIF02s3kbmbqSsjlkP17VsVj3d2clS8pgf/KQIEZdF/6Cbfz/RaeiKrXjgZvBWeb8Fdh+1DLjOlp8I4X2rvVGf+gUODaAG97jvWEE6f3fWIxQXmNvhJCDydtnKdDhDiWmFH3A3Vn+btSq9uhBVo8AKkjbsVVnIvWvmolhRtRHgZKwVOWz20aQinSiTqHX+E9YBo1rpUPL+m5zuxgEYZ51Sj7kg6PhW5cIM+mr9bXmTnfAMKosuizm0Mdb951vRMaOIblRjomae2xnOwsgX3P5zXiIUT/skpB1GhZ36WhSgw/0JTLNPydqKC0crPiPIVpxv6iZRhPKogwQHghRspykiydoeUzj5y7E8f2K9GoLokDji9RN6sB4854Ds5Ew2YvD/QU6pQHmLtzA616DVD/2K+hyykEBIn0lJfxE2ywwunJq34NGVhd3UdRZK3VAjEPb0ak2YxC7Nrj3d/aqCsje3v4vtyN0Qn0J5mtC0y8wTy65jNIYC3wzv1bLCUICVnT8/qn1wG8rqounXp8kU174wrLi2HMmhtTs+siJccpxmCgUX77CSIuIn/+v3S0QIFokXZ/u6nzyt4aRcT6S1cnZizTZhv4af8LY8P4=

host;x-amz-date;x-amz-security-token
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060826Z
20201115/ap-southeast-2/iotdata/aws4_request
d3160b1ced0df1b9b61044383df58a30335ea7f62c345f071c3209fce05cc894
DEBUG:botocore.auth:Signature:
7c04117d7a800c48c8b863a0f67f0cf846a48e5db5aca3110e353d3ff9e36a45
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060826Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAM+cLEsoVqMZCzOWZjQ2MbCdmNX8gUVgUiDg3XYVAHuMAiEA242QRiiDShLyslNY+EAo/OwjHaWUS9RmsOQjeWx18ecqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDNr0yM3ugCiliuZ+3ir4AgXtLxAVyQom0yxlnmeBT0X8C47pwaoZTWWksw486ETieGlhc1D9vQ0zF+zWJm8q78cRcXg4oobRqfKOM218DJYaXMFpt6VVvU/qUitPf6mOA0LJ2YRlIgjzl46iIF02s3kbmbqSsjlkP17VsVj3d2clS8pgf/KQIEZdF/6Cbfz/RaeiKrXjgZvBWeb8Fdh+1DLjOlp8I4X2rvVGf+gUODaAG97jvWEE6f3fWIxQXmNvhJCDydtnKdDhDiWmFH3A3Vn+btSq9uhBVo8AKkjbsVVnIvWvmolhRtRHgZKwVOWz20aQinSiTqHX+E9YBo1rpUPL+m5zuxgEYZ51Sj7kg6PhW5cIM+mr9bXmTnfAMKosuizm0Mdb951vRMaOIblRjomae2xnOwsgX3P5zXiIUT/skpB1GhZ36WhSgw/0JTLNPydqKC0crPiPIVpxv6iZRhPKogwQHghRspykiydoeUzj5y7E8f2K9GoLokDji9RN6sB4854Ds5Ew2YvD/QU6pQHmLtzA616DVD/2K+hyykEBIn0lJfxE2ywwunJq34NGVhd3UdRZK3VAjEPb0ak2YxC7Nrj3d/aqCsje3v4vtyN0Qn0J5mtC0y8wTy65jNIYC3wzv1bLCUICVnT8/qn1wG8rqounXp8kU174wrLi2HMmhtTs+siJccpxmCgUX77CSIuIn/+v3S0QIFokXZ/u6nzyt4aRcT6S1cnZizTZhv4af8LY8P4=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU22QHA7O3A/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=7c04117d7a800c48c8b863a0f67f0cf846a48e5db5aca3110e353d3ff9e36a45', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:08:26 GMT', 'x-amzn-RequestId': 'ba3a3080-cb8b-1b80-787a-7e59f2aadfd1', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"ba3a3080-cb8b-1b80-787a-7e59f2aadfd1"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001C49F99A430>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<349 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=d313b8490b97b00f19fce7056fb91810;color=;display-name=AndyVanDam;emotes=;flags=;id=37af67a3-1405-455f-8e30-a7e6955bdf8e;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420510849;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot left\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000001C49EE48D30>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000001C49EE4D5E0>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'{"action": "move", "direction": "left", "angle": 90, "duration": 0, "duraction": -1}', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000001C49EF3BC70>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000001C49EF3BA90>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000001C49EE48C10>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060831Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAM+cLEsoVqMZCzOWZjQ2MbCdmNX8gUVgUiDg3XYVAHuMAiEA242QRiiDShLyslNY+EAo/OwjHaWUS9RmsOQjeWx18ecqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDNr0yM3ugCiliuZ+3ir4AgXtLxAVyQom0yxlnmeBT0X8C47pwaoZTWWksw486ETieGlhc1D9vQ0zF+zWJm8q78cRcXg4oobRqfKOM218DJYaXMFpt6VVvU/qUitPf6mOA0LJ2YRlIgjzl46iIF02s3kbmbqSsjlkP17VsVj3d2clS8pgf/KQIEZdF/6Cbfz/RaeiKrXjgZvBWeb8Fdh+1DLjOlp8I4X2rvVGf+gUODaAG97jvWEE6f3fWIxQXmNvhJCDydtnKdDhDiWmFH3A3Vn+btSq9uhBVo8AKkjbsVVnIvWvmolhRtRHgZKwVOWz20aQinSiTqHX+E9YBo1rpUPL+m5zuxgEYZ51Sj7kg6PhW5cIM+mr9bXmTnfAMKosuizm0Mdb951vRMaOIblRjomae2xnOwsgX3P5zXiIUT/skpB1GhZ36WhSgw/0JTLNPydqKC0crPiPIVpxv6iZRhPKogwQHghRspykiydoeUzj5y7E8f2K9GoLokDji9RN6sB4854Ds5Ew2YvD/QU6pQHmLtzA616DVD/2K+hyykEBIn0lJfxE2ywwunJq34NGVhd3UdRZK3VAjEPb0ak2YxC7Nrj3d/aqCsje3v4vtyN0Qn0J5mtC0y8wTy65jNIYC3wzv1bLCUICVnT8/qn1wG8rqounXp8kU174wrLi2HMmhtTs+siJccpxmCgUX77CSIuIn/+v3S0QIFokXZ/u6nzyt4aRcT6S1cnZizTZhv4af8LY8P4=

host;x-amz-date;x-amz-security-token
65b121e6e4895b49a23531a29cacca5f0b3720b76d6e3e1b675a2f24d62e3d0d
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060831Z
20201115/ap-southeast-2/iotdata/aws4_request
ee6ee1f2a4cd7cf2549aa19c595aad54389e7bb3d9b19eac3c9d957bcdb966e9
DEBUG:botocore.auth:Signature:
1c257ba4ea90c741a084aca338f7e89bba5aea36073636c13974e8c776c82edd
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060831Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkgwRgIhAM+cLEsoVqMZCzOWZjQ2MbCdmNX8gUVgUiDg3XYVAHuMAiEA242QRiiDShLyslNY+EAo/OwjHaWUS9RmsOQjeWx18ecqpAMI5///////////ARAAGgw4ODM4NzY3MDc2MzciDNr0yM3ugCiliuZ+3ir4AgXtLxAVyQom0yxlnmeBT0X8C47pwaoZTWWksw486ETieGlhc1D9vQ0zF+zWJm8q78cRcXg4oobRqfKOM218DJYaXMFpt6VVvU/qUitPf6mOA0LJ2YRlIgjzl46iIF02s3kbmbqSsjlkP17VsVj3d2clS8pgf/KQIEZdF/6Cbfz/RaeiKrXjgZvBWeb8Fdh+1DLjOlp8I4X2rvVGf+gUODaAG97jvWEE6f3fWIxQXmNvhJCDydtnKdDhDiWmFH3A3Vn+btSq9uhBVo8AKkjbsVVnIvWvmolhRtRHgZKwVOWz20aQinSiTqHX+E9YBo1rpUPL+m5zuxgEYZ51Sj7kg6PhW5cIM+mr9bXmTnfAMKosuizm0Mdb951vRMaOIblRjomae2xnOwsgX3P5zXiIUT/skpB1GhZ36WhSgw/0JTLNPydqKC0crPiPIVpxv6iZRhPKogwQHghRspykiydoeUzj5y7E8f2K9GoLokDji9RN6sB4854Ds5Ew2YvD/QU6pQHmLtzA616DVD/2K+hyykEBIn0lJfxE2ywwunJq34NGVhd3UdRZK3VAjEPb0ak2YxC7Nrj3d/aqCsje3v4vtyN0Qn0J5mtC0y8wTy65jNIYC3wzv1bLCUICVnT8/qn1wG8rqounXp8kU174wrLi2HMmhtTs+siJccpxmCgUX77CSIuIn/+v3S0QIFokXZ/u6nzyt4aRcT6S1cnZizTZhv4af8LY8P4=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU22QHA7O3A/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=1c257ba4ea90c741a084aca338f7e89bba5aea36073636c13974e8c776c82edd', 'Content-Length': '84'}>
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:08:31 GMT', 'x-amzn-RequestId': '15baaa12-82a3-3bfd-da0b-33e16efc2fbf', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"15baaa12-82a3-3bfd-da0b-33e16efc2fbf"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000001C49F99A430>
DEBUG:botocore.retryhandler:No retry needed.
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-35' coro=<event_message() done, defined at bot.py:56> exception=AttributeError("'NoneType' object has no attribute 'debug'")>
Traceback (most recent call last):
  File "bot.py", line 82, in event_message
    logger.debug(f"left respons: {resp}")
AttributeError: 'NoneType' object has no attribute 'debug'
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'x\xd5\xe3o', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'x\xd5\xe3o', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 78d5e36f
DEBUG:websockets.protocol:client - event = data_received(<350 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=baae136dfad0fb97f069603a809a2829;color=;display-name=AndyVanDam;emotes=;flags=;id=e5f68b50-f54f-47ba-b71a-9b9ff1ad4c4e;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420529479;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot right\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :Ok @andyvandam, turning right 90 degrees\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<199 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':andyvandam!andyvandam@andyvandam.tmi.twitch.tv JOIN #daroboto\r\n:letsdothis_music!letsdothis_music@letsdothis_music.tmi.twitch.tv JOIN #daroboto\r\n:lurxx!lurxx@lurxx.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b')cK6', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b')cK6', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 29634b36
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x0000024A5ED310A0>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', '0Mr8dbz+uLswKtrX/CEBDQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 06:09:24 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', '4BnfpTdChgV8P4UbVnzcVZpvNgo=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<425 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<50 bytes>)
DEBUG:websockets.protocol:client - event = data_received(<463 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x0000024A5E1A8D30>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x0000024A5E1AE5E0>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x0000024A5E298D00>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x0000024A5E298B20>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x0000024A5E1A8C10>
DEBUG:botocore.hooks:Event choose-service-name: calling handler <function handle_service_name_alias at 0x0000024A5E18E670>
DEBUG:botocore.loaders:Loading JSON file: C:\Users\Andrew\.virtualenvs\chatbot-5QJP191A\lib\site-packages\botocore\data\sso\2019-06-10\service-2.json
DEBUG:botocore.hooks:Event creating-client-class.sso: calling handler <function add_generate_presigned_url at 0x0000024A5E13ED30>
DEBUG:botocore.endpoint:Setting portal.sso timeout as (60, 60)
DEBUG:botocore.client:Registering retry handlers for service: sso
DEBUG:botocore.hooks:Event before-parameter-build.sso.GetRoleCredentials: calling handler <function generate_idempotent_uuid at 0x0000024A5E1A8D30>
DEBUG:botocore.hooks:Event before-call.sso.GetRoleCredentials: calling handler <function inject_api_version_header_if_needed at 0x0000024A5E1AE5E0>
DEBUG:botocore.endpoint:Making request for OperationModel(name=GetRoleCredentials) with params: {'url_path': '/federation/credentials', 'query_string': {'role_name': 'AWSAdministratorAccess', 'account_id': '883876707637'}, 'method': 'GET', 'headers': {'x-amz-sso_bearer_token': 'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'', 'url': 'https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x0000024A5ED2FEB0>, 'has_streaming_input': False, 'auth_type': 'none'}}
DEBUG:botocore.hooks:Event request-created.sso.GetRoleCredentials: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x0000024A5ED2FE20>>
DEBUG:botocore.hooks:Event choose-signer.sso.GetRoleCredentials: calling handler <function set_operation_specific_signer at 0x0000024A5E1A8C10>
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637, headers={'x-amz-sso_bearer_token': b'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): portal.sso.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://portal.sso.ap-southeast-2.amazonaws.com:443 "GET /federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637 HTTP/1.1" 200 1100
DEBUG:botocore.parsers:Response headers: {'Date': 'Sun, 15 Nov 2020 06:09:25 GMT', 'Content-Type': 'application/json', 'Content-Length': '1100', 'Connection': 'keep-alive', 'Access-Control-Expose-Headers': 'RequestId', 'Cache-Control': 'no-cache', 'RequestId': '9de4dd34-85e5-4447-82df-48e43bd733f0', 'Server': 'AWS SSO'}
DEBUG:botocore.parsers:Response body:
b'{"roleCredentials":{"accessKeyId":"ASIA43SZIHU2SIUKDDEG","secretAccessKey":"/VhuKhIhUM+zsGeiq3X1kMDhITUTed2mKJBbjn9q","sessionToken":"IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgWXcXS1BbB5Dn0KIw+Viz7zwTQsh9LyR0MPxbK5v0pqgCIQDak0O5bPBh9GJuKTwpNsw6aLBtnX+ArU5lz4baHeTrsSqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMS7X6Zmz04DpTZqpWKvgC56ZfjjzNeFeMLXpB7ePcSocP/SeGFVR8GQKNFuhnnzYh+nVVgcyD1Fb/CFg/WMxlN3Y9DSIXcX50ZPFg2/un1twSt7u+3a4DGLFrHsGzac1jpdzezihErx78E5QSrkxkNpaoQYZu9Td/xbfo+K098LyJwgn64DSkEjvOmYY8oAZLcoXoKgD3WkTRVDrcVcYZEpGPrSd7Ere7cxa3C9QWiM3e7kP0swnPVvHhdBgBWrTIAP1w5UMsN/iTUm/yDEMFvln7rQCJSDbcPfBSqsr90dsynXngZwh2lbmNY7bPoN7pcnBl5aUQHk/mv7RU2Fyi86CN9w2djGQkFP+DFc/GOrthl40CCsXYEYV0A9HVxilk8gRPwAq9O4scXFSRYLGu5e+bESOnnFFfQEGs5nDFyNdQn19v18fEvlr6qjax44GS818vFhBl8KplZGHw91yjUM+lQu7iaxvpEkk/8l7fok19LzB2p94pFjvBq8sEhUJvKFYVHCStIzCVjMP9BTqmAasmDGGWreh4alU5P78CiTBVvw1+/66kgd/a1wkxzsIQdhQeA4jSAHQ0i2+poxpyugKztQ3PEenR5OioqC2B1Cglv3sFQnEQoWawIgYRwxzxBD1NFNSlmdEEVLf25BKTHgXmEWgQar6nuiwx7eGsjNK4SFFVYMifNSdgKpmeN22JP87Yog6MfBGj5HdiTeYQ9bnSVjaZyDWQA4zOICs+TIFHhKCh0BU=","expiration":1605424164000}}'
DEBUG:botocore.hooks:Event needs-retry.sso.GetRoleCredentials: calling handler <botocore.retryhandler.RetryHandler object at 0x0000024A5ED97880>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:botocore.credentials:Retrieved credentials will expire at: 2020-11-15 07:09:24+00:00
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060926Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgWXcXS1BbB5Dn0KIw+Viz7zwTQsh9LyR0MPxbK5v0pqgCIQDak0O5bPBh9GJuKTwpNsw6aLBtnX+ArU5lz4baHeTrsSqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMS7X6Zmz04DpTZqpWKvgC56ZfjjzNeFeMLXpB7ePcSocP/SeGFVR8GQKNFuhnnzYh+nVVgcyD1Fb/CFg/WMxlN3Y9DSIXcX50ZPFg2/un1twSt7u+3a4DGLFrHsGzac1jpdzezihErx78E5QSrkxkNpaoQYZu9Td/xbfo+K098LyJwgn64DSkEjvOmYY8oAZLcoXoKgD3WkTRVDrcVcYZEpGPrSd7Ere7cxa3C9QWiM3e7kP0swnPVvHhdBgBWrTIAP1w5UMsN/iTUm/yDEMFvln7rQCJSDbcPfBSqsr90dsynXngZwh2lbmNY7bPoN7pcnBl5aUQHk/mv7RU2Fyi86CN9w2djGQkFP+DFc/GOrthl40CCsXYEYV0A9HVxilk8gRPwAq9O4scXFSRYLGu5e+bESOnnFFfQEGs5nDFyNdQn19v18fEvlr6qjax44GS818vFhBl8KplZGHw91yjUM+lQu7iaxvpEkk/8l7fok19LzB2p94pFjvBq8sEhUJvKFYVHCStIzCVjMP9BTqmAasmDGGWreh4alU5P78CiTBVvw1+/66kgd/a1wkxzsIQdhQeA4jSAHQ0i2+poxpyugKztQ3PEenR5OioqC2B1Cglv3sFQnEQoWawIgYRwxzxBD1NFNSlmdEEVLf25BKTHgXmEWgQar6nuiwx7eGsjNK4SFFVYMifNSdgKpmeN22JP87Yog6MfBGj5HdiTeYQ9bnSVjaZyDWQA4zOICs+TIFHhKCh0BU=

host;x-amz-date;x-amz-security-token
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060926Z
20201115/ap-southeast-2/iotdata/aws4_request
65b0d70c712faa8b2b69a2171c624a26433cb6356ed6275f661477ebc27a69dd
DEBUG:botocore.auth:Signature:
3be2ff6ce6461cbdbee860d9f209975ccf67a51df8459aebc44c796a4bc9cea3
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060926Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgWXcXS1BbB5Dn0KIw+Viz7zwTQsh9LyR0MPxbK5v0pqgCIQDak0O5bPBh9GJuKTwpNsw6aLBtnX+ArU5lz4baHeTrsSqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMS7X6Zmz04DpTZqpWKvgC56ZfjjzNeFeMLXpB7ePcSocP/SeGFVR8GQKNFuhnnzYh+nVVgcyD1Fb/CFg/WMxlN3Y9DSIXcX50ZPFg2/un1twSt7u+3a4DGLFrHsGzac1jpdzezihErx78E5QSrkxkNpaoQYZu9Td/xbfo+K098LyJwgn64DSkEjvOmYY8oAZLcoXoKgD3WkTRVDrcVcYZEpGPrSd7Ere7cxa3C9QWiM3e7kP0swnPVvHhdBgBWrTIAP1w5UMsN/iTUm/yDEMFvln7rQCJSDbcPfBSqsr90dsynXngZwh2lbmNY7bPoN7pcnBl5aUQHk/mv7RU2Fyi86CN9w2djGQkFP+DFc/GOrthl40CCsXYEYV0A9HVxilk8gRPwAq9O4scXFSRYLGu5e+bESOnnFFfQEGs5nDFyNdQn19v18fEvlr6qjax44GS818vFhBl8KplZGHw91yjUM+lQu7iaxvpEkk/8l7fok19LzB2p94pFjvBq8sEhUJvKFYVHCStIzCVjMP9BTqmAasmDGGWreh4alU5P78CiTBVvw1+/66kgd/a1wkxzsIQdhQeA4jSAHQ0i2+poxpyugKztQ3PEenR5OioqC2B1Cglv3sFQnEQoWawIgYRwxzxBD1NFNSlmdEEVLf25BKTHgXmEWgQar6nuiwx7eGsjNK4SFFVYMifNSdgKpmeN22JP87Yog6MfBGj5HdiTeYQ9bnSVjaZyDWQA4zOICs+TIFHhKCh0BU=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU2SIUKDDEG/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=3be2ff6ce6461cbdbee860d9f209975ccf67a51df8459aebc44c796a4bc9cea3', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:09:26 GMT', 'x-amzn-RequestId': '204b20ea-bd1b-12de-7d48-a1489b24cb71', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"204b20ea-bd1b-12de-7d48-a1489b24cb71"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x0000024A5ECFA4C0>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<349 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=8d7f62f0d1caf6987f5272c32e3fc8c0;color=;display-name=AndyVanDam;emotes=;flags=;id=6e103ff4-11a6-4bb2-9338-f49478027dce;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420571991;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot left\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x0000024A5E1A8D30>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x0000024A5E1AE5E0>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'{"action": "move", "direction": "left", "angle": 90, "duration": 0, "duraction": -1}', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x0000024A5E298D00>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x0000024A5E298B20>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x0000024A5E1A8C10>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T060932Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgWXcXS1BbB5Dn0KIw+Viz7zwTQsh9LyR0MPxbK5v0pqgCIQDak0O5bPBh9GJuKTwpNsw6aLBtnX+ArU5lz4baHeTrsSqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMS7X6Zmz04DpTZqpWKvgC56ZfjjzNeFeMLXpB7ePcSocP/SeGFVR8GQKNFuhnnzYh+nVVgcyD1Fb/CFg/WMxlN3Y9DSIXcX50ZPFg2/un1twSt7u+3a4DGLFrHsGzac1jpdzezihErx78E5QSrkxkNpaoQYZu9Td/xbfo+K098LyJwgn64DSkEjvOmYY8oAZLcoXoKgD3WkTRVDrcVcYZEpGPrSd7Ere7cxa3C9QWiM3e7kP0swnPVvHhdBgBWrTIAP1w5UMsN/iTUm/yDEMFvln7rQCJSDbcPfBSqsr90dsynXngZwh2lbmNY7bPoN7pcnBl5aUQHk/mv7RU2Fyi86CN9w2djGQkFP+DFc/GOrthl40CCsXYEYV0A9HVxilk8gRPwAq9O4scXFSRYLGu5e+bESOnnFFfQEGs5nDFyNdQn19v18fEvlr6qjax44GS818vFhBl8KplZGHw91yjUM+lQu7iaxvpEkk/8l7fok19LzB2p94pFjvBq8sEhUJvKFYVHCStIzCVjMP9BTqmAasmDGGWreh4alU5P78CiTBVvw1+/66kgd/a1wkxzsIQdhQeA4jSAHQ0i2+poxpyugKztQ3PEenR5OioqC2B1Cglv3sFQnEQoWawIgYRwxzxBD1NFNSlmdEEVLf25BKTHgXmEWgQar6nuiwx7eGsjNK4SFFVYMifNSdgKpmeN22JP87Yog6MfBGj5HdiTeYQ9bnSVjaZyDWQA4zOICs+TIFHhKCh0BU=

host;x-amz-date;x-amz-security-token
65b121e6e4895b49a23531a29cacca5f0b3720b76d6e3e1b675a2f24d62e3d0d
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T060932Z
20201115/ap-southeast-2/iotdata/aws4_request
2a22336c5a7708b9055274ed8aeb332c0ceff4287a91eff8a0d0173b501a6718
DEBUG:botocore.auth:Signature:
4e3fc3c062da4d66a147267672dc234f775598cc519b5f78f30aac25a2937259
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T060932Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgWXcXS1BbB5Dn0KIw+Viz7zwTQsh9LyR0MPxbK5v0pqgCIQDak0O5bPBh9GJuKTwpNsw6aLBtnX+ArU5lz4baHeTrsSqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMS7X6Zmz04DpTZqpWKvgC56ZfjjzNeFeMLXpB7ePcSocP/SeGFVR8GQKNFuhnnzYh+nVVgcyD1Fb/CFg/WMxlN3Y9DSIXcX50ZPFg2/un1twSt7u+3a4DGLFrHsGzac1jpdzezihErx78E5QSrkxkNpaoQYZu9Td/xbfo+K098LyJwgn64DSkEjvOmYY8oAZLcoXoKgD3WkTRVDrcVcYZEpGPrSd7Ere7cxa3C9QWiM3e7kP0swnPVvHhdBgBWrTIAP1w5UMsN/iTUm/yDEMFvln7rQCJSDbcPfBSqsr90dsynXngZwh2lbmNY7bPoN7pcnBl5aUQHk/mv7RU2Fyi86CN9w2djGQkFP+DFc/GOrthl40CCsXYEYV0A9HVxilk8gRPwAq9O4scXFSRYLGu5e+bESOnnFFfQEGs5nDFyNdQn19v18fEvlr6qjax44GS818vFhBl8KplZGHw91yjUM+lQu7iaxvpEkk/8l7fok19LzB2p94pFjvBq8sEhUJvKFYVHCStIzCVjMP9BTqmAasmDGGWreh4alU5P78CiTBVvw1+/66kgd/a1wkxzsIQdhQeA4jSAHQ0i2+poxpyugKztQ3PEenR5OioqC2B1Cglv3sFQnEQoWawIgYRwxzxBD1NFNSlmdEEVLf25BKTHgXmEWgQar6nuiwx7eGsjNK4SFFVYMifNSdgKpmeN22JP87Yog6MfBGj5HdiTeYQ9bnSVjaZyDWQA4zOICs+TIFHhKCh0BU=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU2SIUKDDEG/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=4e3fc3c062da4d66a147267672dc234f775598cc519b5f78f30aac25a2937259', 'Content-Length': '84'}>
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:09:32 GMT', 'x-amzn-RequestId': '69f81b04-4306-501f-55eb-b66fc5b180b2', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"69f81b04-4306-501f-55eb-b66fc5b180b2"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x0000024A5ECFA4C0>
DEBUG:botocore.retryhandler:No retry needed.
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-37' coro=<event_message() done, defined at bot.py:56> exception=TypeError("object dict can't be used in 'await' expression")>
Traceback (most recent call last):
  File "bot.py", line 76, in event_message
    await client.publish(
TypeError: object dict can't be used in 'await' expression
DEBUG:websockets.protocol:client - event = data_received(<350 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=585dc4ea87661be5310e727c2dd27eff;color=;display-name=AndyVanDam;emotes=;flags=;id=12002c52-ee6b-4e06-924c-eea48285b8d8;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420579851;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot right\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :Ok @andyvandam, turning right 90 degrees\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<349 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=568b88e160441336f13a09a231b6ea6c;color=;display-name=AndyVanDam;emotes=;flags=;id=501f6354-2b6b-4544-80c1-fd62976a2c89;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420584200;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot back\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :Ok @andyvandam, moving backward\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\x18\x08\x1b@', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\x18\x08\x1b@', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 18081b40
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'0\xa9H~', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'0\xa9H~', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 30a9487e
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'Q\xda\xa7z', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'Q\xda\xa7z', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 51daa77a
DEBUG:websockets.protocol:client - event = data_received(<199 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':andyvandam!andyvandam@andyvandam.tmi.twitch.tv JOIN #daroboto\r\n:letsdothis_music!letsdothis_music@letsdothis_music.tmi.twitch.tv JOIN #daroboto\r\n:lurxx!lurxx@lurxx.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'lP\xd4C', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'lP\xd4C', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 6c50d443
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'I\xf8\xfe\x18', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'I\xf8\xfe\x18', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 49f8fe18
DEBUG:websockets.protocol:client - state = CONNECTING
DEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x000002720B0910A0>)
DEBUG:websockets.client:client > GET / HTTP/1.1
DEBUG:websockets.client:client > Headers([('Host', 'irc-ws.chat.twitch.tv'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'j/nq3fgAysTFCrWfUgVsyQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.8 websockets/8.1')])
DEBUG:websockets.protocol:client - event = data_received(<166 bytes>)
DEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols
DEBUG:websockets.client:client < Headers([('Date', 'Sun, 15 Nov 2020 06:11:21 GMT'), ('Connection', 'upgrade'), ('Upgrade', 'websocket'), ('Sec-WebSocket-Accept', '2VP65ZxbApjNlaUbkJFyEWw2HtY=')])
DEBUG:websockets.protocol:client - state = OPEN
DEBUG:twitchio.websocket:Sending authentication sequence payload to Twitch.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PASS oauth:f9u47r8mxm8g2iq7mzjqvpczkmu5p7\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'NICK daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/commands', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/tags', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'CAP REQ :twitch.tv/membership', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<473 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':tmi.twitch.tv 001 daroboto :Welcome, GLHF!\r\n:tmi.twitch.tv 002 daroboto :Your host is tmi.twitch.tv\r\n:tmi.twitch.tv 003 daroboto :This server is rather new\r\n:tmi.twitch.tv 004 daroboto :-\r\n:tmi.twitch.tv 375 daroboto :-\r\n:tmi.twitch.tv 372 daroboto :You are in a maze of twisty passages, all alike.\r\n:tmi.twitch.tv 376 daroboto :>\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/tags\r\n:tmi.twitch.tv CAP * ACK :twitch.tv/membership\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
INFO:twitchio.websocket:Successfully logged onto Twitch WS | daroboto
DEBUG:websockets.protocol:client - event = data_received(<463 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':daroboto!daroboto@daroboto.tmi.twitch.tv JOIN #daroboto\r\n:daroboto.tmi.twitch.tv 353 daroboto = #daroboto :daroboto\r\n:daroboto.tmi.twitch.tv 366 daroboto #daroboto :End of /NAMES list\r\n@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n@emote-only=0;followers-only=-1;r9k=0;rituals=0;room-id=608253355;slow=0;subs-only=0 :tmi.twitch.tv ROOMSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:Dispatching event: ready
DEBUG:twitchio.websocket:ACTION:: PING
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PONG None\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000002720A507CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000002720A50E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'Client is online', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000002720A5FCCD0>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000002720A5FCAF0>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000002720A507B80>
DEBUG:botocore.hooks:Event choose-service-name: calling handler <function handle_service_name_alias at 0x000002720A4EE5E0>
DEBUG:botocore.loaders:Loading JSON file: C:\Users\Andrew\.virtualenvs\chatbot-5QJP191A\lib\site-packages\botocore\data\sso\2019-06-10\service-2.json
DEBUG:botocore.hooks:Event creating-client-class.sso: calling handler <function add_generate_presigned_url at 0x000002720A49ECA0>
DEBUG:botocore.endpoint:Setting portal.sso timeout as (60, 60)
DEBUG:botocore.client:Registering retry handlers for service: sso
DEBUG:botocore.hooks:Event before-parameter-build.sso.GetRoleCredentials: calling handler <function generate_idempotent_uuid at 0x000002720A507CA0>
DEBUG:botocore.hooks:Event before-call.sso.GetRoleCredentials: calling handler <function inject_api_version_header_if_needed at 0x000002720A50E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=GetRoleCredentials) with params: {'url_path': '/federation/credentials', 'query_string': {'role_name': 'AWSAdministratorAccess', 'account_id': '883876707637'}, 'method': 'GET', 'headers': {'x-amz-sso_bearer_token': 'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'', 'url': 'https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000002720B08EE80>, 'has_streaming_input': False, 'auth_type': 'none'}}
DEBUG:botocore.hooks:Event request-created.sso.GetRoleCredentials: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000002720B08EDF0>>
DEBUG:botocore.hooks:Event choose-signer.sso.GetRoleCredentials: calling handler <function set_operation_specific_signer at 0x000002720A507B80>
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=GET, url=https://portal.sso.ap-southeast-2.amazonaws.com/federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637, headers={'x-amz-sso_bearer_token': b'eyJlbmMiOiJBMjU2R0NNIiwidGFnIjoiUWNUU0lzQzZsSzh3TG5MYyIsImFsZyI6IkEyNTZHQ01LVyIsIml2IjoiRnlUTENKX05ZaUhPVVZsVSJ9.AYABeDiRXESzHZ6ulQPpj0Y_l2QAHwABABBEYXRhUGxhbmVTZXNzaW9uAAlQZXJlZ3JpbmUAAQAHYXdzLWttcwBQYXJuOmF3czprbXM6YXAtc291dGhlYXN0LTI6NDEyMjAxMDI1ODU4OmtleS9kMTEwZTQ1ZC1mMGVhLTQ4NTYtYmFjNS0xMmMyYTMxM2Q2YWEAuAECAQB4Pcqs65qFZyXWdyHZA9hnHzXOhvyEOzDstw3xH4zNak0BybMYx25hpOuGOoMwHECQ1QAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEtsjuNjn0qdcCLGpwIBEIA7mE8aO_1qIqH4jj4mo5HRWqTGPOw-lJRwaORSXAHJ7TBjAdozBFp_WqhZMbQbLXfzsD8le3SbVj0CLo4CAAAAAAwAABAAAAAAAAAAAAAAAAAAtG5l5_K5IQyHMMI02liOvf____8AAAABAAAAAAAAAAAAAAABAAAAIPTgSZ7IJsVy-Oj5iNYpyV7JOgY65ltL2P-j_fTc5Y7YfmS20mpFNYV49gEXsEiyVQ.mGUZQVETlr9yELjP.PT689x1t4joPAIgmJzhGxJMZGqPcSx_uxmgbQ54sD1_K9oImrIb4GO24LMKWnihpjBirp8kQghdUP-UdPizhFq5lo7aVs8Opwb-3Nm10jIq4RBKvAGPC3EaueRg2llrzlbm4vJYvsMy9UAkruVTAQujo8xyD0JW8qWLxawsb_-scVaCwNUsu_-Hmojps_TLXSnjPE43fVNUMddgr55g7KT3jMCLYpFoM0sYxBnqrQ70e2jtxsx3t9ii_M4H78AobjrYMEyKv_XcBVN0kVoydlZ_EHX7Lrd_Af9y_cvQZy9nVsbG1FCnmARi6YxLdoLT0iTfQuqq8sVEjyqQ5G2VODJjx93d8zmbR3-MBxfW_6sm7CK-oOFndTqltVYEzizxio5-pDQ5bVNzzn8IbuxXEBB2R4XRNlj5czFI_Fhs_J41d0Yj5fnF-vuDFuHTYdb0w8wmjk-0HMRArMWflspDGVFc.-bKcOP_NrkFgvkp3lYZtGA', 'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): portal.sso.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://portal.sso.ap-southeast-2.amazonaws.com:443 "GET /federation/credentials?role_name=AWSAdministratorAccess&account_id=883876707637 HTTP/1.1" 200 1100
DEBUG:botocore.parsers:Response headers: {'Date': 'Sun, 15 Nov 2020 06:11:24 GMT', 'Content-Type': 'application/json', 'Content-Length': '1100', 'Connection': 'keep-alive', 'Access-Control-Expose-Headers': 'RequestId', 'Cache-Control': 'no-cache', 'RequestId': '9a780c51-0e47-4e64-aeb9-6670938aa825', 'Server': 'AWS SSO'}
DEBUG:botocore.parsers:Response body:
b'{"roleCredentials":{"accessKeyId":"ASIA43SZIHU22ERQ5T4D","secretAccessKey":"xm6H1hFjhJjRbFytTY4YiQyToR9HLTSN6w6VUHT+","sessionToken":"IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgd8dMdcVxhbb1dVeSEBck2QZ918QglkCYslbz+us9gU8CIQC2qe8vDddf8jjgYKbHT+JCOfFSCbdK1EdccSqLW972diqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMTrWmrQ15/ukWWtq2KvgCFqU5Ge7mZD1yem5ED1l+E5yf7huT3yhlBFmrG3N/LDZ7Y/hodetePGmFgHc6ccH2T2yrki3AIkoS/aSyFcKgb1O6AA9+7hoUwaoj+Q8Q+MqQaaNv2RLOo1Ay7H6XsuOmuAbxiiknS0Dp2o6O/V2jy4qFHs4izA5frTJEJjdt6oNLHU0/xe+pbtSlnjpHQvxdbT+pok7LCyyGQPAh4c0G50dXCMe+jFe+oHGeNgE/NEvnRBUqcbl106LL87u+CpEocvjwEnRMO+QrLQ9BTYUUjPmrrO/rR4e3ympbuOLH7aOoFG1ZYl2TBX1RDOImM1ozlFk8hpWSIG35Q28/6WRpXIChfAYRHG6sFLq3MV47bILpUZBMGTfDJNMQvIZ7kCN1oeT2FULYOkvTCAwRTMeBo+BR0JR5NTAlYbsmjPKjDNEAx9M4DMotZH4EgU7UM86JAheJWwLMpiSSTAD+f6uAxyGbYXJ3F/s0K06JCODucxWZo7+q6jrZ0jCMjcP9BTqmAeYA+hjZzzLqHwkh5BmrUpWRxyGelo+sCL+1FVlVA+HqwAT+xqW8x7wAeW/QBzm117/OEmSFRPXGqcwfoXJsaXAzDujzkOr1u7bAaIoyu5hxDvtdVwBRlFYu+bh2jOnM0HMKUCh9g2t3Nb1qU6AGjgxyRFTWir28XMwMHNhCHl7FgY+HZ2Ly+PhldljufmpXBZye1AOady540KNusLN9VvEE2cWmy0s=","expiration":1605424283000}}'
DEBUG:botocore.hooks:Event needs-retry.sso.GetRoleCredentials: calling handler <botocore.retryhandler.RetryHandler object at 0x000002720B0F7850>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:botocore.credentials:Retrieved credentials will expire at: 2020-11-15 07:11:23+00:00
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T061125Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgd8dMdcVxhbb1dVeSEBck2QZ918QglkCYslbz+us9gU8CIQC2qe8vDddf8jjgYKbHT+JCOfFSCbdK1EdccSqLW972diqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMTrWmrQ15/ukWWtq2KvgCFqU5Ge7mZD1yem5ED1l+E5yf7huT3yhlBFmrG3N/LDZ7Y/hodetePGmFgHc6ccH2T2yrki3AIkoS/aSyFcKgb1O6AA9+7hoUwaoj+Q8Q+MqQaaNv2RLOo1Ay7H6XsuOmuAbxiiknS0Dp2o6O/V2jy4qFHs4izA5frTJEJjdt6oNLHU0/xe+pbtSlnjpHQvxdbT+pok7LCyyGQPAh4c0G50dXCMe+jFe+oHGeNgE/NEvnRBUqcbl106LL87u+CpEocvjwEnRMO+QrLQ9BTYUUjPmrrO/rR4e3ympbuOLH7aOoFG1ZYl2TBX1RDOImM1ozlFk8hpWSIG35Q28/6WRpXIChfAYRHG6sFLq3MV47bILpUZBMGTfDJNMQvIZ7kCN1oeT2FULYOkvTCAwRTMeBo+BR0JR5NTAlYbsmjPKjDNEAx9M4DMotZH4EgU7UM86JAheJWwLMpiSSTAD+f6uAxyGbYXJ3F/s0K06JCODucxWZo7+q6jrZ0jCMjcP9BTqmAeYA+hjZzzLqHwkh5BmrUpWRxyGelo+sCL+1FVlVA+HqwAT+xqW8x7wAeW/QBzm117/OEmSFRPXGqcwfoXJsaXAzDujzkOr1u7bAaIoyu5hxDvtdVwBRlFYu+bh2jOnM0HMKUCh9g2t3Nb1qU6AGjgxyRFTWir28XMwMHNhCHl7FgY+HZ2Ly+PhldljufmpXBZye1AOady540KNusLN9VvEE2cWmy0s=

host;x-amz-date;x-amz-security-token
ba1bd57fb8062c0e5fd60aafbb5e440e9db7dd0498e9f892385129d5559fd3b3
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T061125Z
20201115/ap-southeast-2/iotdata/aws4_request
c6dc73967deae7deb7c4047d62a1e33d858f58f4fb611a9e67b68673f47b161c
DEBUG:botocore.auth:Signature:
9203832020c31ca31ca7c0861196d4e114016e28064f30ca6306b86ceae90a86
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T061125Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgd8dMdcVxhbb1dVeSEBck2QZ918QglkCYslbz+us9gU8CIQC2qe8vDddf8jjgYKbHT+JCOfFSCbdK1EdccSqLW972diqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMTrWmrQ15/ukWWtq2KvgCFqU5Ge7mZD1yem5ED1l+E5yf7huT3yhlBFmrG3N/LDZ7Y/hodetePGmFgHc6ccH2T2yrki3AIkoS/aSyFcKgb1O6AA9+7hoUwaoj+Q8Q+MqQaaNv2RLOo1Ay7H6XsuOmuAbxiiknS0Dp2o6O/V2jy4qFHs4izA5frTJEJjdt6oNLHU0/xe+pbtSlnjpHQvxdbT+pok7LCyyGQPAh4c0G50dXCMe+jFe+oHGeNgE/NEvnRBUqcbl106LL87u+CpEocvjwEnRMO+QrLQ9BTYUUjPmrrO/rR4e3ympbuOLH7aOoFG1ZYl2TBX1RDOImM1ozlFk8hpWSIG35Q28/6WRpXIChfAYRHG6sFLq3MV47bILpUZBMGTfDJNMQvIZ7kCN1oeT2FULYOkvTCAwRTMeBo+BR0JR5NTAlYbsmjPKjDNEAx9M4DMotZH4EgU7UM86JAheJWwLMpiSSTAD+f6uAxyGbYXJ3F/s0K06JCODucxWZo7+q6jrZ0jCMjcP9BTqmAeYA+hjZzzLqHwkh5BmrUpWRxyGelo+sCL+1FVlVA+HqwAT+xqW8x7wAeW/QBzm117/OEmSFRPXGqcwfoXJsaXAzDujzkOr1u7bAaIoyu5hxDvtdVwBRlFYu+bh2jOnM0HMKUCh9g2t3Nb1qU6AGjgxyRFTWir28XMwMHNhCHl7FgY+HZ2Ly+PhldljufmpXBZye1AOady540KNusLN9VvEE2cWmy0s=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU22ERQ5T4D/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=9203832020c31ca31ca7c0861196d4e114016e28064f30ca6306b86ceae90a86', 'Content-Length': '16'}>
DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): data.iot.ap-southeast-2.amazonaws.com:443
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:11:24 GMT', 'x-amzn-RequestId': 'aae93513-caa8-9f92-428b-7992d69fdd8f', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"aae93513-caa8-9f92-428b-7992d69fdd8f"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000002720B05A490>
DEBUG:botocore.retryhandler:No retry needed.
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :/me has landed!\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<349 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=3db1d2b68426dde7e330ccc4b8220d9c;color=;display-name=AndyVanDam;emotes=;flags=;id=7e37050a-ae33-4071-8d65-7fb83d30fcbf;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420686768;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot left\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000002720A507CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000002720A50E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'left', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000002720A5FCCD0>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000002720A5FCAF0>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000002720A507B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T061127Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgd8dMdcVxhbb1dVeSEBck2QZ918QglkCYslbz+us9gU8CIQC2qe8vDddf8jjgYKbHT+JCOfFSCbdK1EdccSqLW972diqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMTrWmrQ15/ukWWtq2KvgCFqU5Ge7mZD1yem5ED1l+E5yf7huT3yhlBFmrG3N/LDZ7Y/hodetePGmFgHc6ccH2T2yrki3AIkoS/aSyFcKgb1O6AA9+7hoUwaoj+Q8Q+MqQaaNv2RLOo1Ay7H6XsuOmuAbxiiknS0Dp2o6O/V2jy4qFHs4izA5frTJEJjdt6oNLHU0/xe+pbtSlnjpHQvxdbT+pok7LCyyGQPAh4c0G50dXCMe+jFe+oHGeNgE/NEvnRBUqcbl106LL87u+CpEocvjwEnRMO+QrLQ9BTYUUjPmrrO/rR4e3ympbuOLH7aOoFG1ZYl2TBX1RDOImM1ozlFk8hpWSIG35Q28/6WRpXIChfAYRHG6sFLq3MV47bILpUZBMGTfDJNMQvIZ7kCN1oeT2FULYOkvTCAwRTMeBo+BR0JR5NTAlYbsmjPKjDNEAx9M4DMotZH4EgU7UM86JAheJWwLMpiSSTAD+f6uAxyGbYXJ3F/s0K06JCODucxWZo7+q6jrZ0jCMjcP9BTqmAeYA+hjZzzLqHwkh5BmrUpWRxyGelo+sCL+1FVlVA+HqwAT+xqW8x7wAeW/QBzm117/OEmSFRPXGqcwfoXJsaXAzDujzkOr1u7bAaIoyu5hxDvtdVwBRlFYu+bh2jOnM0HMKUCh9g2t3Nb1qU6AGjgxyRFTWir28XMwMHNhCHl7FgY+HZ2Ly+PhldljufmpXBZye1AOady540KNusLN9VvEE2cWmy0s=

host;x-amz-date;x-amz-security-token
360f84035942243c6a36537ae2f8673485e6c04455a0a85a0db19690f2541480
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T061127Z
20201115/ap-southeast-2/iotdata/aws4_request
f5cabcb543bf0cb67bee21287d49ee52ef584e82b93a067ec17bffcf3394f2ce
DEBUG:botocore.auth:Signature:
514a1671f6c5d02305ed8c55e77260d2264904bd1191a2f2f408b027ca83bca8
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T061127Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgd8dMdcVxhbb1dVeSEBck2QZ918QglkCYslbz+us9gU8CIQC2qe8vDddf8jjgYKbHT+JCOfFSCbdK1EdccSqLW972diqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMTrWmrQ15/ukWWtq2KvgCFqU5Ge7mZD1yem5ED1l+E5yf7huT3yhlBFmrG3N/LDZ7Y/hodetePGmFgHc6ccH2T2yrki3AIkoS/aSyFcKgb1O6AA9+7hoUwaoj+Q8Q+MqQaaNv2RLOo1Ay7H6XsuOmuAbxiiknS0Dp2o6O/V2jy4qFHs4izA5frTJEJjdt6oNLHU0/xe+pbtSlnjpHQvxdbT+pok7LCyyGQPAh4c0G50dXCMe+jFe+oHGeNgE/NEvnRBUqcbl106LL87u+CpEocvjwEnRMO+QrLQ9BTYUUjPmrrO/rR4e3ympbuOLH7aOoFG1ZYl2TBX1RDOImM1ozlFk8hpWSIG35Q28/6WRpXIChfAYRHG6sFLq3MV47bILpUZBMGTfDJNMQvIZ7kCN1oeT2FULYOkvTCAwRTMeBo+BR0JR5NTAlYbsmjPKjDNEAx9M4DMotZH4EgU7UM86JAheJWwLMpiSSTAD+f6uAxyGbYXJ3F/s0K06JCODucxWZo7+q6jrZ0jCMjcP9BTqmAeYA+hjZzzLqHwkh5BmrUpWRxyGelo+sCL+1FVlVA+HqwAT+xqW8x7wAeW/QBzm117/OEmSFRPXGqcwfoXJsaXAzDujzkOr1u7bAaIoyu5hxDvtdVwBRlFYu+bh2jOnM0HMKUCh9g2t3Nb1qU6AGjgxyRFTWir28XMwMHNhCHl7FgY+HZ2Ly+PhldljufmpXBZye1AOady540KNusLN9VvEE2cWmy0s=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU22ERQ5T4D/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=514a1671f6c5d02305ed8c55e77260d2264904bd1191a2f2f408b027ca83bca8', 'Content-Length': '4'}>
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:11:27 GMT', 'x-amzn-RequestId': '641c9201-baf0-a434-01fd-2432daf9a284', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"641c9201-baf0-a434-01fd-2432daf9a284"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000002720B05A490>
DEBUG:botocore.retryhandler:No retry needed.
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-35' coro=<event_message() done, defined at bot.py:56> exception=AttributeError("'NoneType' object has no attribute 'debug'")>
Traceback (most recent call last):
  File "bot.py", line 83, in event_message
    logger.debug(f"left respons: {resp}")
AttributeError: 'NoneType' object has no attribute 'debug'
DEBUG:websockets.protocol:client - event = data_received(<350 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=0a8ba0360988b4ec7cafb0ecba3f501c;color=;display-name=AndyVanDam;emotes=;flags=;id=9b1b65c3-0db7-473a-8b48-b2cfd25ec361;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420695239;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot right\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=1, data=b'PRIVMSG #daroboto :Ok @andyvandam, turning right 90 degrees\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:websockets.protocol:client - event = data_received(<156 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=broadcaster/1;color=;display-name=DaRoboto;emote-sets=0,300374282;mod=0;subscriber=0;user-type= :tmi.twitch.tv USERSTATE #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: USERSTATE
DEBUG:websockets.protocol:client - event = data_received(<199 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b':lurxx!lurxx@lurxx.tmi.twitch.tv JOIN #daroboto\r\n:andyvandam!andyvandam@andyvandam.tmi.twitch.tv JOIN #daroboto\r\n:letsdothis_music!letsdothis_music@letsdothis_music.tmi.twitch.tv JOIN #daroboto\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:twitchio.websocket:ACTION:: JOIN: daroboto
DEBUG:twitchio.websocket:Dispatching event: join
DEBUG:websockets.protocol:client - event = data_received(<349 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=1, data=b'@badge-info=;badges=moderator/1;client-nonce=ad2a02d4f10be3db8ec2e29a5cc0b0b8;color=;display-name=AndyVanDam;emotes=;flags=;id=a5f63c58-59fb-4496-9d23-1e2b30fb87e7;mod=1;room-id=608253355;subscriber=0;tmi-sent-ts=1605420698838;turbo=0;user-id=268451970;user-type=mod :andyvandam!andyvandam@andyvandam.tmi.twitch.tv PRIVMSG #daroboto :!bot left\r\n', rsv1=False, rsv2=False, rsv3=False)
DEBUG:twitchio.websocket:Dispatching event: raw_data
DEBUG:twitchio.websocket:Dispatching event: message
DEBUG:botocore.hooks:Event before-parameter-build.iot-data-plane.Publish: calling handler <function generate_idempotent_uuid at 0x000002720A507CA0>
DEBUG:botocore.hooks:Event before-call.iot-data-plane.Publish: calling handler <function inject_api_version_header_if_needed at 0x000002720A50E550>
DEBUG:botocore.endpoint:Making request for OperationModel(name=Publish) with params: {'url_path': '/topics/%2F', 'query_string': {'qos': 0}, 'method': 'POST', 'headers': {'User-Agent': 'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18'}, 'body': b'left', 'url': 'https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0', 'context': {'client_region': 'ap-southeast-2', 'client_config': <botocore.config.Config object at 0x000002720A5FCCD0>, 'has_streaming_input': True, 'auth_type': None}}
DEBUG:botocore.hooks:Event request-created.iot-data-plane.Publish: calling handler <bound method RequestSigner.handler of <botocore.signers.RequestSigner object at 0x000002720A5FCAF0>>
DEBUG:botocore.hooks:Event choose-signer.iot-data-plane.Publish: calling handler <function set_operation_specific_signer at 0x000002720A507B80>
DEBUG:botocore.auth:Calculating signature using v4 auth.
DEBUG:botocore.auth:CanonicalRequest:
POST
/topics/%252F
qos=0
host:data.iot.ap-southeast-2.amazonaws.com
x-amz-date:20201115T061139Z
x-amz-security-token:IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgd8dMdcVxhbb1dVeSEBck2QZ918QglkCYslbz+us9gU8CIQC2qe8vDddf8jjgYKbHT+JCOfFSCbdK1EdccSqLW972diqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMTrWmrQ15/ukWWtq2KvgCFqU5Ge7mZD1yem5ED1l+E5yf7huT3yhlBFmrG3N/LDZ7Y/hodetePGmFgHc6ccH2T2yrki3AIkoS/aSyFcKgb1O6AA9+7hoUwaoj+Q8Q+MqQaaNv2RLOo1Ay7H6XsuOmuAbxiiknS0Dp2o6O/V2jy4qFHs4izA5frTJEJjdt6oNLHU0/xe+pbtSlnjpHQvxdbT+pok7LCyyGQPAh4c0G50dXCMe+jFe+oHGeNgE/NEvnRBUqcbl106LL87u+CpEocvjwEnRMO+QrLQ9BTYUUjPmrrO/rR4e3ympbuOLH7aOoFG1ZYl2TBX1RDOImM1ozlFk8hpWSIG35Q28/6WRpXIChfAYRHG6sFLq3MV47bILpUZBMGTfDJNMQvIZ7kCN1oeT2FULYOkvTCAwRTMeBo+BR0JR5NTAlYbsmjPKjDNEAx9M4DMotZH4EgU7UM86JAheJWwLMpiSSTAD+f6uAxyGbYXJ3F/s0K06JCODucxWZo7+q6jrZ0jCMjcP9BTqmAeYA+hjZzzLqHwkh5BmrUpWRxyGelo+sCL+1FVlVA+HqwAT+xqW8x7wAeW/QBzm117/OEmSFRPXGqcwfoXJsaXAzDujzkOr1u7bAaIoyu5hxDvtdVwBRlFYu+bh2jOnM0HMKUCh9g2t3Nb1qU6AGjgxyRFTWir28XMwMHNhCHl7FgY+HZ2Ly+PhldljufmpXBZye1AOady540KNusLN9VvEE2cWmy0s=

host;x-amz-date;x-amz-security-token
360f84035942243c6a36537ae2f8673485e6c04455a0a85a0db19690f2541480
DEBUG:botocore.auth:StringToSign:
AWS4-HMAC-SHA256
20201115T061139Z
20201115/ap-southeast-2/iotdata/aws4_request
78d52777736cfc5c35b726c40c8f1deee19bb966ec0d2b7c8afded8316644a32
DEBUG:botocore.auth:Signature:
a26a9a5352b3d7e22944d109586856ba9a81bef06a62e9701b360936e94d0b6c
DEBUG:botocore.endpoint:Sending http request: <AWSPreparedRequest stream_output=False, method=POST, url=https://data.iot.ap-southeast-2.amazonaws.com/topics/%2F?qos=0, headers={'User-Agent': b'Boto3/1.16.18 Python/3.8.6 Windows/10 Botocore/1.19.18', 'X-Amz-Date': b'20201115T061139Z', 'X-Amz-Security-Token': b'IQoJb3JpZ2luX2VjEH4aDmFwLXNvdXRoZWFzdC0yIkcwRQIgd8dMdcVxhbb1dVeSEBck2QZ918QglkCYslbz+us9gU8CIQC2qe8vDddf8jjgYKbHT+JCOfFSCbdK1EdccSqLW972diqkAwjn//////////8BEAAaDDg4Mzg3NjcwNzYzNyIMTrWmrQ15/ukWWtq2KvgCFqU5Ge7mZD1yem5ED1l+E5yf7huT3yhlBFmrG3N/LDZ7Y/hodetePGmFgHc6ccH2T2yrki3AIkoS/aSyFcKgb1O6AA9+7hoUwaoj+Q8Q+MqQaaNv2RLOo1Ay7H6XsuOmuAbxiiknS0Dp2o6O/V2jy4qFHs4izA5frTJEJjdt6oNLHU0/xe+pbtSlnjpHQvxdbT+pok7LCyyGQPAh4c0G50dXCMe+jFe+oHGeNgE/NEvnRBUqcbl106LL87u+CpEocvjwEnRMO+QrLQ9BTYUUjPmrrO/rR4e3ympbuOLH7aOoFG1ZYl2TBX1RDOImM1ozlFk8hpWSIG35Q28/6WRpXIChfAYRHG6sFLq3MV47bILpUZBMGTfDJNMQvIZ7kCN1oeT2FULYOkvTCAwRTMeBo+BR0JR5NTAlYbsmjPKjDNEAx9M4DMotZH4EgU7UM86JAheJWwLMpiSSTAD+f6uAxyGbYXJ3F/s0K06JCODucxWZo7+q6jrZ0jCMjcP9BTqmAeYA+hjZzzLqHwkh5BmrUpWRxyGelo+sCL+1FVlVA+HqwAT+xqW8x7wAeW/QBzm117/OEmSFRPXGqcwfoXJsaXAzDujzkOr1u7bAaIoyu5hxDvtdVwBRlFYu+bh2jOnM0HMKUCh9g2t3Nb1qU6AGjgxyRFTWir28XMwMHNhCHl7FgY+HZ2Ly+PhldljufmpXBZye1AOady540KNusLN9VvEE2cWmy0s=', 'Authorization': b'AWS4-HMAC-SHA256 Credential=ASIA43SZIHU22ERQ5T4D/20201115/ap-southeast-2/iotdata/aws4_request, SignedHeaders=host;x-amz-date;x-amz-security-token, Signature=a26a9a5352b3d7e22944d109586856ba9a81bef06a62e9701b360936e94d0b6c', 'Content-Length': '4'}>
DEBUG:urllib3.connectionpool:https://data.iot.ap-southeast-2.amazonaws.com:443 "POST /topics/%2F?qos=0 HTTP/1.1" 200 65
DEBUG:botocore.parsers:Response headers: {'content-type': 'application/json', 'content-length': '65', 'date': 'Sun, 15 Nov 2020 06:11:39 GMT', 'x-amzn-RequestId': '004d0bd3-1613-33ce-47d5-60c566c0d7d2', 'connection': 'keep-alive'}
DEBUG:botocore.parsers:Response body:
b'{"message":"OK","traceId":"004d0bd3-1613-33ce-47d5-60c566c0d7d2"}'
DEBUG:botocore.hooks:Event needs-retry.iot-data-plane.Publish: calling handler <botocore.retryhandler.RetryHandler object at 0x000002720B05A490>
DEBUG:botocore.retryhandler:No retry needed.
ERROR:asyncio:Task exception was never retrieved
future: <Task finished name='Task-54' coro=<event_message() done, defined at bot.py:56> exception=AttributeError("'NoneType' object has no attribute 'debug'")>
Traceback (most recent call last):
  File "bot.py", line 83, in event_message
    logger.debug(f"left respons: {resp}")
AttributeError: 'NoneType' object has no attribute 'debug'
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\xab#\x85\x86', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\xab#\x85\x86', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: ab238586
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\x0e\xf4\x83\xde', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\x0e\xf4\x83\xde', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 0ef483de
DEBUG:websockets.protocol:client > Frame(fin=True, opcode=9, data=b'\x1do\xd7K', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - event = data_received(<6 bytes>)
DEBUG:websockets.protocol:client < Frame(fin=True, opcode=10, data=b'\x1do\xd7K', rsv1=False, rsv2=False, rsv3=False)
DEBUG:websockets.protocol:client - received solicited pong: 1d6fd74b
